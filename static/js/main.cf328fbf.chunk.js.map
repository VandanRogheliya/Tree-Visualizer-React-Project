{"version":3,"sources":["components/Menu.js","components/bst/BSTMenu.js","components/bst/DataStructure.js","components/bst/BSTPopup.js","hooks/useDelError.js","hooks/usePopup.js","hooks/useTraversal.js","components/bst/BSTree.js","components/minHeap/DataStructure.js","components/minHeap/MinHeapMenu.js","components/minHeap/MinHeapPopup.js","components/minHeap/MinH.js","components/maxHeap/DataStructure.js","components/maxHeap/MaxHeapMenu.js","components/maxHeap/MaxHeapPopup.js","components/maxHeap/MaxH.js","components/trie/AllWords.js","components/trie/DataStructureN.js","components/trie/TrieMenu.js","components/trie/TriePopup.js","components/trie/TrieMain.js","components/avl/AVLMenu.js","components/avl/DataStructure.js","components/avl/AVLPopup.js","components/avl/AVLTree.js","components/redBlack/RedBMenu.js","components/redBlack/DataStructure.js","components/redBlack/RedBPopup.js","components/redBlack/RedBTree.js","components/MainPopup.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","className","id","onClick","selector","BSTMenu","insertRef","useRef","removeRef","searchRef","randomRef","insert","current","value","remove","search","random","placeholder","ref","type","onKeyUp","e","keyCode","seaError","delError","traversal","balance","check","Node","this","left","right","parent","htmlLeft","htmlRight","html","key","node","isLeft","newHtml","setHtml","updateRootHtml","isLeftChild","childrenCondtion","setChildToChildsChild","setChildToNull","BST","num","root","generateRandomBST","highlighted","leafDepth","clearHighlight","newNode","insertNode","findMax","findMin","removeNode","minNodeOfRight","updateValue","ans","height","Math","max","countNodes","list","push","preorder","inorder","postorder","addHighlight","lower","elements","Set","i","floor","has","add","BSTTypeList","isBalanced","isComplete","isPerfect","isFull","leftH","rightH","abs","totalNodes","isComplete2","index","isPerfect2","depth","nodes","BSTToArr","l","length","makeBST","start","end","mid","BSTPopup","toggle","width","icon","closeCircleF","href","target","rel","useDelError","depend","useState","setDelError","useEffect","usePopup","popup","setPopup","useTraversal","tree","initialTraversal","op","useReducer","state","action","BSTree","setTree","treeHtml","setTreeHtml","bstList","setBstList","searchError","setSearchError","traversalList","traversalDispatch","togglePopup","tempTree","questionMarkCircleOutline","val","parseInt","tempList","checkBST","map","item","MinHeap","heap","generateRandomMinH","j","p","heapifyUp","c1","c2","heapifyDown","updateHtml","isEmpty","temp","pop","indexOf","Number","NEGATIVE_INFINITY","removeTop","c1Html","c2Html","MinHeapMenu","extract","MinHeapPopup","MinH","minHeap","setMinHeap","heapHtml","setHeapHtml","tempHeap","deleteEl","element","MaxHeap","generateRandomMaxH","POSITIVE_INFINITY","MaxHeapMenu","MaxHeapPopup","MaxH","maxHeap","setMaxHeap","words","nodeTrie","isEnd","children","childrenHtml","Object","keys","HighlightHtml","Trie","highlightStart","randomTrie","word","trim","toUpperCase","searchWord","constructor","findPrefix","allWords","findAllWords2","TrieMenu","onChange","TriePopup","TrieMain","trie","setTrie","trieHtml","setTrieHtml","setWords","wordNotFound","setWordNotFound","tempTrie","listAll","tempWords","findAllWords","realTimeSearch","deleteWord","AVLMenu","balanceHtml","AVL","tempNode","setHeight","leftHeight","rightHeight","balanceCheck","rotateLeft","rotateRight","AVLPopup","AVLTree","RedBMenu","NullNode","color","isNull","newNullNode","RBT","toRecolor","sibling","siblingOf","tempParent","deleteOneChild","smallestRight","child","replaceChild","deleteCase1","deleteCase2","deleteCase3","deleteCase4","deleteCase5","deleteCase6","RedBPopup","RedBTree","MainPopup","initialState","menu","bst","minheap","maxheap","avl","redb","reducer","App","dispatch","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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3H,GACjB,CACA,IAAI2J,EAAWS,EACfT,EAAS7J,OAAOE,GAChBqK,EAAWV,GACXD,EAAYC,EAASrI,QAwDnB8H,QApDa,WACf,IAAIO,EAAWS,EACfT,EAASX,YACTqB,EAAWV,GACXD,EAAYC,EAASrI,OAiDnBrB,OA7CY,SAAAD,GACdA,EAAQ2H,SAAS3H,GACjB,IAAI2J,EAAWS,GAEuB,IAAlCT,EAAS1B,KAAKY,QAAQ7I,IAK1B2J,EAASC,SAAS5J,GAClBqK,EAAWV,GACXD,EAAYC,EAASrI,OANpB2E,GAAY,IAyCX9F,OA/BY,SAAAH,GACdA,EAAQ2H,SAAS3H,GACjB,IAAI2J,EAAW,IAAIG,EAAQ9J,GAC3BqK,EAAWV,GACXD,EAAYC,EAASrI,OA4BnBX,SAAUA,EAAW,QAAU,KAEhC,yBAAKvB,UAAU,aACbgL,GAAWA,EAAQnC,KAAKhD,OACxB,oCAEEmF,EAAQnC,KAAKH,KAAI,SAAC+B,EAASlF,GAAV,OACjB,wBAAIpD,IAAKoD,GAAQkF,OAInB,6CAGF,yBAAKzK,UAAU,QACd,4BAAKqK,IAELrD,EAAQ,kBAAC,EAAD,CAAcb,OAAQgC,IAAkB,OC23BrC+C,EAx+BH,CACX,MAAS,CACR,OACA,UACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,MACA,SACA,aACA,SACA,SACA,QACA,OACA,QACA,OACA,WACA,SACA,WACA,cACA,UACA,YACA,WACA,QACA,SACA,UACA,OACA,SACA,WACA,SACA,YACA,QACA,SACA,UACA,WACA,QACA,YACA,MACA,SACA,OACA,SACA,SACA,SACA,UACA,OACA,QACA,OACA,WACA,QACA,OACA,QACA,QACA,WACA,QACA,SACA,OACA,MACA,WACA,OACA,WACA,OACA,SACA,OACA,UACA,MACA,WACA,OACA,eACA,SACA,OACA,QACA,QACA,UACA,aACA,UACA,WACA,SACA,aACA,UACA,YACA,UACA,QACA,QACA,SACA,SACA,OACA,UACA,UACA,UACA,MACA,MACA,SACA,SACA,OACA,YACA,WACA,UACA,WACA,UACA,OACA,UACA,UACA,aACA,SACA,MACA,QACA,SACA,OACA,aACA,MACA,OACA,SACA,QACA,SACA,SACA,QACA,QACA,MACA,YACA,SACA,MACA,eACA,SACA,OACA,SACA,WACA,OACA,SACA,SACA,SACA,OACA,UACA,QACA,OACA,WACA,QACA,OACA,WACA,SACA,SACA,SACA,WACA,YACA,YACA,OACA,OACA,WACA,SACA,YACA,UACA,QACA,SACA,YACA,SACA,WACA,SACA,SACA,UACA,MACA,MACA,YACA,QACA,SACA,SACA,SACA,WACA,QACA,QACA,UACA,OACA,UACA,OACA,SACA,QACA,QACA,UACA,OACA,OACA,QACA,cACA,QACA,UACA,OACA,SACA,OACA,QACA,SACA,SACA,OACA,OACA,OACA,MACA,SACA,OACA,UACA,UACA,OACA,OACA,SACA,MACA,QACA,QACA,OACA,YACA,OACA,QACA,QACA,cACA,QACA,WACA,OACA,SACA,UACA,UACA,WACA,SACA,SACA,SACA,QACA,YACA,QACA,YACA,OACA,QACA,WACA,QACA,OACA,OACA,QACA,UACA,UACA,OACA,YACA,MACA,SACA,QACA,QACA,YACA,aACA,SACA,OACA,UACA,YACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,MACA,SACA,OACA,SACA,SACA,SACA,SACA,WACA,WACA,WACA,QACA,QACA,QACA,YACA,QACA,SACA,QACA,SACA,QACA,OACA,MACA,QACA,SACA,OACA,QACA,aACA,QACA,UACA,aACA,OACA,UACA,WACA,YACA,OACA,SACA,YACA,SACA,QACA,OACA,OACA,SACA,MACA,cACA,QACA,UACA,QACA,UACA,cACA,QACA,WACA,SACA,QACA,QACA,cACA,OACA,SACA,aACA,QACA,OACA,UACA,QACA,WACA,QACA,QACA,QACA,QACA,QACA,SACA,YACA,MACA,QACA,SACA,WACA,QACA,MACA,QACA,WACA,UACA,OACA,YACA,WACA,WACA,QACA,UACA,SACA,QACA,cACA,OACA,SACA,UACA,MACA,QACA,QACA,OACA,QACA,MACA,UACA,SACA,cACA,UACA,UACA,OACA,OACA,WACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,MACA,QACA,YACA,UACA,SACA,WACA,QACA,QACA,OACA,SACA,WACA,OACA,QACA,YACA,QACA,QACA,QACA,cACA,MACA,UACA,QACA,WACA,QACA,gBACA,SACA,QACA,QACA,QACA,WACA,SACA,QACA,WACA,MACA,OACA,UACA,YACA,SACA,QACA,OACA,SACA,UACA,UACA,OACA,UACA,UACA,MACA,MACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,QACA,OACA,QACA,WACA,WACA,aACA,WACA,WACA,YACA,OACA,MACA,OACA,OACA,QACA,aACA,WACA,aACA,SACA,OACA,SACA,OACA,UACA,aACA,OACA,SACA,YACA,MACA,QACA,WACA,MACA,UACA,QACA,SACA,QACA,OACA,YACA,OACA,OACA,WACA,aACA,SACA,QACA,QACA,WACA,QACA,OACA,OACA,UACA,QACA,UACA,OACA,MACA,OACA,QACA,OACA,UACA,MACA,QACA,UACA,QACA,SACA,YACA,SACA,SACA,MACA,UACA,SACA,QACA,QACA,YACA,YACA,SACA,OACA,QACA,UACA,YACA,WACA,WACA,MACA,YACA,WACA,YACA,OACA,SACA,SACA,MACA,QACA,SACA,OACA,UACA,UACA,UACA,UACA,cACA,OACA,UACA,OACA,WACA,SACA,UACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,QACA,YACA,QACA,QACA,SACA,WACA,QACA,OACA,WACA,WACA,WACA,WACA,QACA,OACA,YACA,OACA,aACA,YACA,QACA,QACA,QACA,OACA,OACA,YACA,YACA,WACA,YACA,SACA,SACA,MACA,WACA,QACA,OACA,aACA,SACA,UACA,YACA,OACA,SACA,SACA,SACA,cACA,aACA,QACA,OACA,YACA,SACA,SACA,SACA,WACA,OACA,WACA,WACA,SACA,SACA,SACA,aACA,UACA,QACA,OACA,cACA,OACA,WACA,WACA,MACA,QACA,YACA,WACA,OACA,OACA,OACA,UACA,SACA,QACA,QACA,SACA,aACA,OACA,QACA,OACA,SACA,WACA,OACA,UACA,SACA,WACA,QACA,SACA,OACA,SACA,SACA,OACA,MACA,OACA,OACA,YACA,YACA,MACA,WACA,UACA,QACA,OACA,aACA,UACA,UACA,QACA,QACA,SACA,QACA,YACA,UACA,QACA,QACA,WACA,SACA,UACA,SACA,QACA,UACA,WACA,SACA,QACA,QACA,QACA,YACA,QACA,UACA,WACA,SACA,SACA,WACA,OACA,QACA,UACA,WACA,OACA,QACA,SACA,OACA,SACA,OACA,eACA,QACA,MACA,OACA,OACA,SACA,WACA,SACA,OACA,SACA,OACA,SACA,SACA,QACA,UACA,SACA,cACA,OACA,OACA,WACA,OACA,QACA,UACA,YACA,OACA,SACA,OACA,SACA,SACA,UACA,QACA,QACA,QACA,WACA,QACA,OACA,SACA,UACA,OACA,SACA,MACA,UACA,OACA,QACA,QACA,aACA,MACA,UACA,OACA,SACA,OACA,QACA,QACA,WACA,UACA,UACA,SACA,aACA,SACA,QACA,UACA,QACA,OACA,MACA,SACA,OACA,QACA,OACA,SACA,MACA,MACA,QACA,SACA,SACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,WACA,UACA,aACA,SACA,SACA,QACA,OACA,YACA,YACA,OACA,QACA,aACA,QACA,QACA,SACA,UACA,QACA,UACA,QACA,MACA,OACA,QACA,QACA,QACA,QACA,UACA,SACA,eACA,YACA,QACA,OACA,QACA,UACA,QACA,SACA,QACA,UACA,WACA,YACA,YACA,YACA,SACA,QACA,MACA,OACA,OACA,WACA,OACA,aACA,UACA,YACA,SACA,QACA,cACA,UACA,UACA,MACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,aACA,UACA,eACA,SACA,UACA,WACA,QACA,QACA,OACA,QACA,YACA,aACA,OACA,UACA,SACA,WACA,MACA,SACA,QACA,SACA,OACA,SACA,QACA,SACA,SACA,eACA,YACA,UACA,QACA,QACA,OACA,OACA,WACA,SACA,YACA,YACA,MACA,UACA,YACA,WACA,MACA,UACA,OACA,YACA,UACA,MACA,aACA,WACA,SACA,WACA,QACA,SACA,UACA,QACA,OACA,OACA,OACA,SACA,UACA,OACA,UACA,OACA,MACA,YACA,OACA,OACA,QACA,WACA,QACA,WACA,SACA,UACA,WACA,QACA,WACA,UACA,YACA,MACA,OACA,UACA,OACA,UACA,WACA,UACA,SACA,MACA,MACA,QACA,SACA,WACA,MACA,MACA,UACA,QACA,UACA,WACA,QACA,OACA,iBACA,UACA,QACA,WACA,aACA,YACA,YACA,aACA,OACA,UACA,MACA,UACA,UACA,MACA,aACA,SACA,YACA,OACA,UACA,WACA,OACA,WACA,cACA,WACA,OACA,YACA,WACA,YACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,SACA,OACA,OACA,SACA,WACA,QACA,SACA,QACA,YACA,SACA,UACA,OACA,YACA,UACA,SACA,QACA,OACA,aACA,aACA,MACA,WACA,YACA,WACA,OACA,WACA,SACA,MACA,QACA,UACA,YACA,WACA,WACA,SACA,SACA,QACA,SACA,WACA,WACA,QACA,SACA,QACA,OACA,QACA,QACA,UACA,UACA,OACA,UACA,YACA,SCj+BIC,E,WACL,WAAYhJ,GAAM,oBACjBP,KAAKwJ,OAAQ,EACbxJ,KAAKyJ,SAAW,GAChBzJ,KAAKG,OAAS,KACdH,KAAKO,IAAMA,EACXP,KAAK0J,aAAe,GACpB1J,KAAKM,KACJ,wBAAIC,IAAKP,KAAKO,KACb,yBAAKnC,UAAU,UAAUmC,GAAY,QACpCP,KAAK0J,aAAazF,OAClB,4BAAKjE,KAAK0J,cACP,M,yDAON1J,KAAK0J,aAAe,GACpB,IAAK,IAAI7G,EAAI,EAAGA,EAAI8G,OAAOC,KAAK5J,KAAKyJ,UAAUxF,OAAQpB,IACtD7C,KAAK0J,aAAar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","file":"static/js/main.cf328fbf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Menu(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className=\"main-header\">\r\n\t\t\t\t<h1 className=\"heading main\">Tree Visualizer</h1>\r\n\t\t\t</header>\r\n\t\t\t<div id=\"bst\">\r\n\t\t\t\t<button onClick={() => props.selector('bst')}>\r\n\t\t\t\t\tBinary Search Tree\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"trie\">\r\n\t\t\t\t<button onClick={() => props.selector('trie')}>Trie</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"avl\">\r\n\t\t\t\t<button onClick={() => props.selector('avl')}>\r\n\t\t\t\t\tAVL Tree\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"minheap\">\r\n\t\t\t\t<button onClick={() => props.selector('minheap')}>\r\n\t\t\t\t\tMin Heap\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"maxheap\">\r\n\t\t\t\t<button onClick={() => props.selector('maxheap')}>\r\n\t\t\t\t\tMax Heap\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"redb\">\r\n\t\t\t\t<button onClick={() => props.selector('redb')}>\r\n\t\t\t\t\tRed Black Tree\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Menu\r\n","import React, { useRef } from 'react'\r\n\r\nfunction BSTMenu(props) {\r\n\tconst insertRef = useRef(null)\r\n\tconst removeRef = useRef(null)\r\n\tconst searchRef = useRef(null)\r\n\tconst randomRef = useRef(null)\r\n\r\n\tconst insert = () => {\r\n\t\tprops.insert(insertRef.current.value)\r\n\t}\r\n\r\n\tconst remove = () => {\r\n\t\tprops.remove(removeRef.current.value)\r\n\t}\r\n\r\n\tconst search = () => {\r\n\t\tprops.search(searchRef.current.value)\r\n\t}\r\n\r\n\tconst random = () => {\r\n\t\tprops.random(randomRef.current.value)\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tprops.random(0)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"menu\">\r\n\t\t\t<ul id=\"mainBST\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Insert\"\r\n\t\t\t\t\t\tref={insertRef}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) insert()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={insert} className=\"insert\">\r\n\t\t\t\t\t\tInsert\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tref={searchRef}\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) search()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={props.seaError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={search}>Search</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Delete\"\r\n\t\t\t\t\t\tref={removeRef}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) remove()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={props.delError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={remove} className=\"delete\">\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Node count\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tref={randomRef}\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) random()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={random}>Random</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={clear}>Clear</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"dropdown\">\r\n\t\t\t\t\t<button>Traversal</button>\r\n\t\t\t\t\t<div className=\"dropdown-content\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button onClick={() => props.traversal('inorder')}>\r\n\t\t\t\t\t\t\t\t\tInorder\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button onClick={() => props.traversal('preorder')}>\r\n\t\t\t\t\t\t\t\t\tPreorder\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button onClick={() => props.traversal('postorder')}>\r\n\t\t\t\t\t\t\t\t\tPostorder\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={props.balance}>Balance</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={props.check}>Check</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BSTMenu\r\n","import React from 'react'\r\nexport class Node {\r\n\tconstructor(value) {\r\n\t\tthis.value = value\r\n\t\tthis.left = null\r\n\t\tthis.right = null\r\n\t\tthis.parent = null\r\n\t\tthis.htmlLeft = (\r\n\t\t\t<li className=\"null\">\r\n\t\t\t\t<div>null</div>\r\n\t\t\t</li>\r\n\t\t)\r\n\r\n\t\tthis.htmlRight = (\r\n\t\t\t<li className=\"null\">\r\n\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t</li>\r\n\t\t)\r\n\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.value}>\r\n\t\t\t\t<div className=\"normal\">{this.value}</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.htmlLeft} {this.htmlRight}\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\t//Inserts a node in HTML\r\n\tinsert(node, isLeft) {\r\n\t\tconst newHtml = node.html\r\n\r\n\t\tif (isLeft) {\r\n\t\t\tthis.htmlLeft = newHtml\r\n\t\t} else {\r\n\t\t\tthis.htmlRight = newHtml\r\n\t\t}\r\n\t\tthis.setHtml()\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Updates HTML for the node\r\n\tsetHtml() {\r\n\t\tthis.html = (\r\n\t\t\t<li>\r\n\t\t\t\t<div className=\"normal\">{this.value}</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.htmlLeft} {this.htmlRight}\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\t//Updates the whole HTML\r\n\tupdateRootHtml() {\r\n\t\tif (this.parent !== null) {\r\n\t\t\tif (this.parent.left === this) this.parent.insert(this, true)\r\n\t\t\telse this.parent.insert(this, false)\r\n\t\t}\r\n\t}\r\n\r\n\t//Sets one child to null\r\n\tsetChildToNull(isLeft) {\r\n\t\tif (isLeft) {\r\n\t\t\tthis.htmlLeft = (\r\n\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t<div>null</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tthis.htmlRight = (\r\n\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t<div>null</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\tthis.setHtml()\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Sets grandchild to child\r\n\tsetChildToChildsChild(isLeftChild, isLeft) {\r\n\t\tif (isLeftChild) {\r\n\t\t\tif (isLeft) {\r\n\t\t\t\tthis.htmlLeft = this.left.left.html\r\n\t\t\t\tthis.setHtml()\r\n\t\t\t} else {\r\n\t\t\t\tthis.htmlLeft = this.left.right.html\r\n\t\t\t\tthis.setHtml()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (isLeft) {\r\n\t\t\t\tthis.htmlRight = this.right.left.html\r\n\t\t\t\tthis.setHtml()\r\n\t\t\t} else {\r\n\t\t\t\tthis.htmlRight = this.right.right.html\r\n\r\n\t\t\t\tthis.setHtml()\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Removes a node from HTML\r\n\tremove(childrenCondtion) {\r\n\t\tif (!this.parent) return\r\n\t\tif (!childrenCondtion) {\r\n\t\t\tif (this.parent.left === this) {\r\n\t\t\t\tthis.parent.setChildToNull(true)\r\n\t\t\t} else {\r\n\t\t\t\tthis.parent.setChildToNull(false)\r\n\t\t\t}\r\n\t\t} else if (childrenCondtion === 'left') {\r\n\t\t\tif (this.parent.left === this) {\r\n\t\t\t\tthis.parent.setChildToChildsChild(true, true)\r\n\t\t\t} else {\r\n\t\t\t\tthis.parent.setChildToChildsChild(false, true)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.parent.left === this) {\r\n\t\t\t\tthis.parent.setChildToChildsChild(true, false)\r\n\t\t\t} else {\r\n\t\t\t\tthis.parent.setChildToChildsChild(false, false)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//Updates the value of a node\r\n\tupdateValue(value) {\r\n\t\tthis.value = value\r\n\t\tthis.setHtml()\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Adds highlight to a node when searched\r\n\taddHighlight() {\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.value}>\r\n\t\t\t\t<div className=\"normal highlight\">{this.value}</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.htmlLeft} {this.htmlRight}\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t)\r\n\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Removes the highlight\r\n\tclearHighlight() {\r\n\t\tthis.setHtml()\r\n\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Changes the html when tree is balanced\r\n\tbalanceHtml() {\r\n\t\tif (!this.left && this.right) {\r\n\t\t\tthis.htmlRight = this.right.html\r\n\t\t\tthis.setChildToNull(true)\r\n\t\t} else if (!this.right && this.left) {\r\n\t\t\tthis.htmlLeft = this.left.html\r\n\t\t\tthis.setChildToNull(false)\r\n\t\t} else if (this.right && this.left) {\r\n\t\t\tthis.htmlLeft = this.left.html\r\n\t\t\tthis.htmlRight = this.right.html\r\n\t\t\tthis.setHtml()\r\n\t\t\tthis.updateRootHtml()\r\n\t\t} else {\r\n\t\t\tthis.htmlLeft = (\r\n\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t<div>null</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\r\n\t\t\tthis.htmlRight = (\r\n\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t\tthis.setHtml()\r\n\t\t\tthis.updateRootHtml()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass BST {\r\n\tconstructor(num = 0) {\r\n\t\tthis.root = null\r\n\t\tif (num) {\r\n\t\t\tthis.generateRandomBST(num)\r\n\t\t}\r\n\t\tthis.highlighted = null\r\n\t\tthis.leafDepth = -1\r\n\t}\r\n\r\n\t//inserting a new node\r\n\tinsert(value) {\r\n\t\tthis.clearHighlight()\r\n\t\tvar newNode = new Node(value)\r\n\t\tif (this.root === null) {\r\n\t\t\tthis.root = newNode\r\n\t\t} else this.insertNode(this.root, newNode)\r\n\t}\r\n\r\n\tinsertNode(node, newNode) {\r\n\t\tif (newNode.value < node.value) {\r\n\t\t\tif (node.left === null) {\r\n\t\t\t\tnode.left = newNode\r\n\t\t\t\tnewNode.parent = node\r\n\t\t\t\tnode.insert(newNode, true)\r\n\t\t\t} else this.insertNode(node.left, newNode)\r\n\t\t} else {\r\n\t\t\tif (node.right === null) {\r\n\t\t\t\tnode.right = newNode\r\n\t\t\t\tnewNode.parent = node\r\n\t\t\t\tnode.insert(newNode, false)\r\n\t\t\t} else this.insertNode(node.right, newNode)\r\n\t\t}\r\n\t}\r\n\r\n\t//Finding max value\r\n\tfindMax(node = this.root) {\r\n\t\tif (node == null) return node\r\n\t\telse if (node.right == null) {\r\n\t\t\treturn node\r\n\t\t} else {\r\n\t\t\treturn this.findMax(node.right)\r\n\t\t}\r\n\t}\r\n\r\n\t//Finding min value\r\n\tfindMin(node = this.root) {\r\n\t\tif (node == null) return node\r\n\t\telse if (node.left == null) {\r\n\t\t\treturn node\r\n\t\t} else {\r\n\t\t\treturn this.findMin(node.left)\r\n\t\t}\r\n\t}\r\n\r\n\t//Deleting node\r\n\tremove(value) {\r\n\t\tthis.clearHighlight()\r\n\t\tthis.root = this.removeNode(this.root, value)\r\n\t}\r\n\r\n\tremoveNode(node, value) {\r\n\t\tif (node === null) return null\r\n\t\telse if (value < node.value) {\r\n\t\t\tnode.left = this.removeNode(node.left, value)\r\n\t\t\treturn node\r\n\t\t} else if (value > node.value) {\r\n\t\t\tnode.right = this.removeNode(node.right, value)\r\n\t\t\treturn node\r\n\t\t} else {\r\n\t\t\tif (node.left === null && node.right === null) {\r\n\t\t\t\tnode.remove(null)\r\n\t\t\t\tnode = null\r\n\t\t\t\treturn node\r\n\t\t\t}\r\n\t\t\tif (node.left === null) {\r\n\t\t\t\tnode.remove('right')\r\n\t\t\t\tnode.right.parent = node.parent\r\n\t\t\t\tnode = node.right\r\n\t\t\t\treturn node\r\n\t\t\t} else if (node.right === null) {\r\n\t\t\t\tnode.remove('left')\r\n\t\t\t\tnode.left.parent = node.parent\r\n\t\t\t\tnode = node.left\r\n\t\t\t\treturn node\r\n\t\t\t}\r\n\t\t\tvar minNodeOfRight = this.findMin(node.right)\r\n\t\t\tnode.updateValue(minNodeOfRight.value)\r\n\r\n\t\t\tnode.right = this.removeNode(node.right, minNodeOfRight.value)\r\n\t\t\treturn node\r\n\t\t}\r\n\t}\r\n\r\n\t//Find height\r\n\theight(node = this.root) {\r\n\t\tif (node === null) return -1\r\n\t\tlet ans\r\n\t\tans = this.height(node.left)\r\n\t\tans = Math.max(this.height(node.right), ans)\r\n\t\treturn ans + 1\r\n\t}\r\n\r\n\t//Count number of nodes\r\n\tcountNodes(node = this.root) {\r\n\t\tif (node === null) return 0\r\n\t\treturn (\r\n\t\t\tthis.countNodes(node.left) + 1 + this.countNodes(node.right)\r\n\t\t)\r\n\t}\r\n\r\n\t//BST traversal\r\n\tpreorder(list, node = this.root) {\r\n\t\tif (node !== null) {\r\n\t\t\tlist.push(node.value)\r\n\t\t\tthis.preorder(list, node.left)\r\n\t\t\tthis.preorder(list, node.right)\r\n\t\t}\r\n\t}\r\n\r\n\tinorder(list, node = this.root) {\r\n\t\tif (node !== null) {\r\n\t\t\tthis.inorder(list, node.left)\r\n\t\t\tlist.push(node.value)\r\n\t\t\tthis.inorder(list, node.right)\r\n\t\t}\r\n\t}\r\n\r\n\tpostorder(list, node = this.root) {\r\n\t\tif (node !== null) {\r\n\t\t\tthis.postorder(list, node.left)\r\n\t\t\tthis.postorder(list, node.right)\r\n\t\t\tlist.push(node.value)\r\n\t\t}\r\n\t}\r\n\r\n\t//Search\r\n\tsearch(value, node = this.root) {\r\n\t\tthis.clearHighlight()\r\n\r\n\t\tif (node === null) return false\r\n\t\telse if (node.value === value) {\r\n\t\t\tnode.addHighlight()\r\n\t\t\tthis.highlighted = node\r\n\t\t\treturn true\r\n\t\t} else if (node.value > value)\r\n\t\t\treturn this.search(value, node.left)\r\n\t\telse return this.search(value, node.right)\r\n\t}\r\n\r\n\t//Random Tree generator\r\n\tgenerateRandomBST(num) {\r\n\t\tlet upper = 0\r\n\t\tlet lower = num * 2 + 10\r\n\t\tlet elements = new Set()\r\n\t\tfor (let i = 0; i < num; i++) {\r\n\t\t\tlet value =\r\n\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\twhile (elements.has(value)) {\r\n\t\t\t\tvalue =\r\n\t\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\t}\r\n\t\t\telements.add(value)\r\n\t\t\tthis.insert(value)\r\n\t\t}\r\n\t}\r\n\r\n\t//BST Checker\r\n\t//Main Checker function\r\n\tcheckBST() {\r\n\t\tlet BSTTypeList = []\r\n\t\tif (this.isBalanced()) {\r\n\t\t\tBSTTypeList.push('Balanced')\r\n\t\t}\r\n\t\tif (this.isComplete()) {\r\n\t\t\tBSTTypeList.push('Complete')\r\n\t\t}\r\n\t\tif (this.isPerfect()) {\r\n\t\t\tBSTTypeList.push('Perfect')\r\n\t\t}\r\n\t\tif (this.isFull()) {\r\n\t\t\tBSTTypeList.push('Full')\r\n\t\t}\r\n\t\treturn BSTTypeList\r\n\t}\r\n\r\n\t//Subfunctions\r\n\t//balance\r\n\tisBalanced(node = this.root) {\r\n\t\tif (node === null) return true\r\n\t\tlet leftH = this.height(node.left)\r\n\t\tlet rightH = this.height(node.right)\r\n\t\tif (Math.abs(leftH - rightH) <= 1) {\r\n\t\t\treturn this.isBalanced(node.left) && this.isBalanced(node.right)\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\t//complete\r\n\tisComplete() {\r\n\t\tlet totalNodes = this.countNodes()\r\n\t\treturn this.isComplete2(0, totalNodes)\r\n\t}\r\n\tisComplete2(index, totalNodes, node = this.root) {\r\n\t\tif (node === null) return true\r\n\t\telse if (index >= totalNodes) return false\r\n\t\telse {\r\n\t\t\tlet ans = this.isComplete2(index * 2 + 1, totalNodes, node.left)\r\n\t\t\tans &= this.isComplete2(index * 2 + 2, totalNodes, node.right)\r\n\t\t\treturn ans\r\n\t\t}\r\n\t}\r\n\r\n\t//perfect\r\n\tisPerfect() {\r\n\t\tif (!this.isFull() || !this.isComplete()) return false\r\n\t\treturn this.isPerfect2()\r\n\t}\r\n\r\n\tisPerfect2(node = this.root, depth = 0) {\r\n\t\tif (!node) return true\r\n\t\tdepth++\r\n\t\tif (!node.right && !node.left) {\r\n\t\t\tif (this.leafDepth !== -1 && this.leafDepth !== depth)\r\n\t\t\t\treturn false\r\n\t\t\tthis.leafDepth = depth\r\n\t\t}\r\n\t\treturn (\r\n\t\t\tthis.isPerfect2(node.left, depth) &&\r\n\t\t\tthis.isPerfect2(node.right, depth)\r\n\t\t)\r\n\t}\r\n\r\n\t//full\r\n\tisFull(node = this.root) {\r\n\t\tif (node === null) return true\r\n\t\telse if (node.left === null && node.right === null) return true\r\n\t\telse if (node.left !== null && node.right !== null) {\r\n\t\t\tlet ans\r\n\t\t\tans = this.isFull(node.left)\r\n\t\t\tans &= this.isFull(node.right)\r\n\t\t\treturn ans\r\n\t\t} else return false\r\n\t}\r\n\r\n\t//Balancing BST\r\n\tbalance(node = this.root) {\r\n\t\tthis.clearHighlight()\r\n\t\tlet nodes = []\r\n\t\tthis.BSTToArr(node, nodes)\r\n\t\tlet l = nodes.length\r\n\t\tthis.root = null\r\n\t\tthis.makeBST(nodes, 0, l - 1)\r\n\t}\r\n\r\n\t//Balancing sub functions\r\n\tBSTToArr(node, nodes) {\r\n\t\tif (node !== null) {\r\n\t\t\tthis.BSTToArr(node.left, nodes)\r\n\t\t\tnodes.push(node)\r\n\t\t\tthis.BSTToArr(node.right, nodes)\r\n\t\t}\r\n\t}\r\n\r\n\t//making BST from array\r\n\tmakeBST(nodes, start, end) {\r\n\t\tif (start > end) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlet mid = Math.floor((start + end) / 2)\r\n\t\tthis.insert(nodes[mid].value)\r\n\t\tthis.makeBST(nodes, start, mid - 1)\r\n\t\tthis.makeBST(nodes, mid + 1, end)\r\n\t}\r\n\r\n\tclearHighlight() {\r\n\t\tif (this.highlighted) {\r\n\t\t\tthis.highlighted.clearHighlight()\r\n\t\t\tthis.highlighted = null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default BST\r\n","import React from 'react'\r\nimport { Icon } from '@iconify/react';\r\nimport closeCircleF from '@iconify/icons-jam/close-circle-f';\r\n\r\nfunction BSTPopup(props) {\r\n\treturn (\r\n\t\t<div className=\"popup\">\r\n\t\t\t<div className=\"inner\">\r\n\t\t\t\t<h1>Help</h1>\r\n\t\t\t\t<Icon\r\n\t\t\t\t\tclassName=\"icon\"\r\n\t\t\t\t\tonClick={props.toggle}\r\n\t\t\t\t\twidth=\"35px\"\r\n\t\t\t\t\theight=\"35px\"\r\n\t\t\t\t\ticon={closeCircleF}\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul className='help-list'>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Insert</button> Inserts a node\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Search</button> Searches and highlights the value\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Delete</button> Deletes the node\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Random</button> Inserts n random nodes\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Clear</button> Removes all nodes\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Traversal</button> Performs chosen traversal\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Balance</button> Balances the BST\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Check</button>Checks whether BST Tree is Balanced,\r\n\t\t\t\t\t\t\tComplete, Perfect or Full\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<a href='https://www.geeksforgeeks.org/binary-search-tree-data-structure/' target='_blank' rel=\"noopener noreferrer\">\r\n\t\t\t\t\t<button className='link-button'>Learn About Binary Search Trees Trees</button>\r\n\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BSTPopup\r\n","import {useState, useEffect} from 'react'\r\n\r\nfunction useDelError(depend) {\r\n  const [delError, setDelError] = useState(false)\r\n  useEffect(() => {\r\n\t\tsetDelError(false)\r\n\t}, [depend])\r\n  return [delError, setDelError]\r\n}\r\n\r\nexport default useDelError\r\n","import { useState } from 'react'\r\n\r\nfunction usePopup() {\r\n\tconst [popup, setPopup] = useState(false)\r\n\t//Toggles Popup\r\n\tconst togglePopup = () => {\r\n\t\tsetPopup(!popup)\r\n  }\r\n  \r\n  return [popup, togglePopup]\r\n}\r\n\r\nexport default usePopup\r\n","import {useReducer} from 'react'\r\n\r\nfunction useTraversal(tree) {\r\n  const initialTraversal = { list: [], op: 'none' }\r\n\tconst reducer = (state, action) => {\r\n\t\tlet list = []\r\n\t\tswitch (action) {\r\n\t\t\tcase 'inorder':\r\n\t\t\t\ttree.inorder(list)\r\n\t\t\t\treturn { list: list, op: 'Inorder' }\r\n\t\t\tcase 'preorder':\r\n\t\t\t\ttree.preorder(list)\r\n\t\t\t\treturn { list: list, op: 'Preorder' }\r\n\t\t\tcase 'postorder':\r\n\t\t\t\ttree.postorder(list)\r\n\t\t\t\treturn { list: list, op: 'Postorder' }\r\n\t\t\tcase 'clear':\r\n\t\t\t\treturn initialTraversal\r\n\t\t\tdefault:\r\n\t\t\t\treturn state\r\n\t\t}\r\n  }\r\n  \r\n  const [traversalList, traversalDispatch] = useReducer(\r\n\t\treducer,\r\n\t\tinitialTraversal\r\n  )\r\n  \r\n  return [traversalList, traversalDispatch]\r\n}\r\n\r\nexport default useTraversal\r\n","import React, { useState, useEffect } from 'react'\r\nimport BSTMenu from './BSTMenu'\r\nimport BST from './DataStructure'\r\nimport BSTPopup from './BSTPopup'\r\nimport useDelError from '../../hooks/useDelError'\r\nimport { Icon } from '@iconify/react'\r\nimport questionMarkCircleOutline from '@iconify/icons-eva/question-mark-circle-outline'\r\nimport usePopup from '../../hooks/usePopup'\r\nimport useTraversal from '../../hooks/useTraversal'\r\n\r\nfunction BSTree(props) {\r\n\t//hooks\r\n\tconst [tree, setTree] = useState()\r\n\tconst [treeHtml, setTreeHtml] = useState()\r\n\tconst [bstList, setBstList] = useState([])\r\n\tconst [delError, setDelError] = useDelError(treeHtml)\r\n\tconst [searchError, setSearchError] = useDelError(treeHtml)\r\n\tconst [traversalList, traversalDispatch] = useTraversal(tree)\r\n\tconst [popup, togglePopup] = usePopup()\r\n\r\n\t//Initializing Tree\r\n\tuseEffect(() => {\r\n\t\tlet tempTree = new BST()\r\n\t\tsetTree(tempTree)\r\n\t\treturn () => {\r\n\t\t\tsetTree(null)\r\n\t\t\tsetTreeHtml(null)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBstList([])\r\n\t}, [treeHtml])\r\n\r\n\t//Insert Function\r\n\tconst insert = val => {\r\n\t\tval = parseInt(val)\r\n\t\tif (!val) return\r\n\t\tlet tempTree = tree\r\n\t\ttempTree.insert(val)\r\n\t\tsetTree(tempTree)\r\n\t\tsetTreeHtml(tree.root.html)\r\n\t\ttraversalDispatch('clear')\r\n\r\n\t}\r\n\r\n\t//Remove\r\n\tconst remove = val => {\r\n\t\tval = parseInt(val)\r\n\t\tlet tempTree = tree\r\n\t\tsetDelError(false)\r\n\t\tif (!tempTree.search(val)) {\r\n\t\t\tsetDelError(true)\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttempTree.remove(val)\r\n\t\tsetTree(tempTree)\r\n\t\tif (tree.root) setTreeHtml(tree.root.html)\r\n\t\telse setTreeHtml(null)\r\n\t\ttraversalDispatch('clear')\r\n\r\n\t}\r\n\r\n\t//Search\r\n\tconst search = val => {\r\n\t\tval = parseInt(val)\r\n\t\tlet tempTree = tree\r\n\r\n\t\tsetSearchError(false)\r\n\t\tif (!tempTree.search(val)) {\r\n\t\t\tsetSearchError(true)\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\ttempTree.search(val)\r\n\t\tsetTree(tempTree)\r\n\t\tif (tree.root) setTreeHtml(tree.root.html)\r\n\t\telse setTreeHtml(null)\r\n\t}\r\n\r\n\t//Generate Random BST with num nodes\r\n\tconst random = num => {\r\n\t\tnum = parseInt(num)\r\n\t\tif (num < 0) return\r\n\t\tlet tempTree = new BST(num)\r\n\t\tsetTree(tempTree)\r\n\r\n\t\tif (num) setTreeHtml(tempTree.root.html)\r\n\t\telse setTreeHtml(null)\r\n\t\ttraversalDispatch('clear')\r\n\r\n\t}\r\n\r\n\t//BALANCE\r\n\tconst balance = () => {\r\n\t\tlet tempTree = tree\r\n\t\ttempTree.balance()\r\n\t\tsetTree(tempTree)\r\n\t\tif (tree.root) setTreeHtml(tree.root.html)\r\n\t\telse setTreeHtml(null)\r\n\t}\r\n\r\n\t//Checks whether BST is balanced, complete, perfect or full\r\n\tconst check = () => {\r\n\t\tlet tempList = tree.checkBST()\r\n\t\tif (!tempList.length) tempList.push('No Type Match')\r\n\t\tsetBstList(tempList)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<header>\r\n\t\t\t\t<h1 className=\"heading\">\r\n\t\t\t\t\tBinary Search Tree\r\n\t\t\t\t\t<button className=\"i\" onClick={togglePopup}>\r\n\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\ticon={questionMarkCircleOutline}\r\n\t\t\t\t\t\t\twidth=\"25px\"\r\n\t\t\t\t\t\t\theight=\"25px\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => props.selector('menu')}\r\n\t\t\t\t\tclassName=\"main-menu-button\"\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</button>\r\n\t\t\t</header>\r\n\t\t\t<BSTMenu\r\n\t\t\t\tinsert={insert}\r\n\t\t\t\tremove={remove}\r\n\t\t\t\tsearch={search}\r\n\t\t\t\trandom={random}\r\n\t\t\t\tbalance={balance}\r\n\t\t\t\ttraversal={traversalDispatch}\r\n\t\t\t\tcheck={check}\r\n\t\t\t\tdelError={delError ? 'error' : ''}\r\n\t\t\t\tseaError={searchError ? 'error' : ''}\r\n\t\t\t/>\r\n\t\t\t<div className=\"traversal\">\r\n\t\t\t\t{traversalList.list.length ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t{traversalList.op}:\r\n\t\t\t\t\t\t{traversalList.list.map((item, index) => (\r\n\t\t\t\t\t\t\t<li key={index}>{item}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>No Traversal Performed</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"bstlist\">\r\n\t\t\t\t{bstList.length ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t{bstList.map((item, index) => (\r\n\t\t\t\t\t\t\t<li key={index}>{item}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>Not yet checked</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tree\">\r\n\t\t\t\t<ul>{treeHtml}</ul>\r\n\t\t\t</div>\r\n\t\t\t{popup ? <BSTPopup toggle={togglePopup} /> : null}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BSTree\r\n","import React from 'react'\r\n\r\nclass MinHeap {\r\n\tconstructor(num = 0) {\r\n\t\tthis.end = 0\r\n\t\tthis.heap = []\r\n\t\tthis.html = null\r\n\t\tif (num) {\r\n\t\t\tthis.generateRandomMinH(num)\r\n\t\t}\r\n\t}\r\n\r\n\t//Helper functions\r\n\theapifyUp(j) {\r\n\t\tif (j === 0) return\r\n\t\tlet p = j\r\n\t\tif (p % 2 === 0) p -= 2\r\n\t\telse p--\r\n\t\tp /= 2\r\n\t\tif (this.heap[p] > this.heap[j]) {\r\n\t\t\t;[this.heap[p], this.heap[j]] = [this.heap[j], this.heap[p]]\r\n\t\t\tthis.heapifyUp(p)\r\n\t\t}\r\n\t}\r\n\r\n\theapifyDown(p = 0) {\r\n\t\tlet c1 = 2 * p + 1\r\n\t\tlet c2 = c1 + 1\r\n\r\n\t\tif (c2 >= this.end && c1 >= this.end) return\r\n\t\telse if (c2 >= this.end && c1 < this.end) {\r\n\t\t\tif (this.heap[c1] < this.heap[p]) {\r\n\t\t\t\t;[this.heap[p], this.heap[c1]] = [this.heap[c1], this.heap[p]]\r\n\t\t\t\tthis.heapifyDown(c1)\r\n\t\t\t}\r\n\t\t} else if (c2 < this.end && c1 >= this.end) {\r\n\t\t\tif (this.heap[c2] < this.heap[p]) {\r\n\t\t\t\t;[this.heap[p], this.heap[c2]] = [this.heap[c2], this.heap[p]]\r\n\t\t\t\tthis.heapifyDown(c2)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\tthis.heap[p] > this.heap[c1] ||\r\n\t\t\t\tthis.heap[p] > this.heap[c2]\r\n\t\t\t) {\r\n\t\t\t\tif (this.heap[c1] < this.heap[c2]) {\r\n\t\t\t\t\t;[this.heap[p], this.heap[c1]] = [\r\n\t\t\t\t\t\tthis.heap[c1],\r\n\t\t\t\t\t\tthis.heap[p],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tthis.heapifyDown(c1)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t;[this.heap[p], this.heap[c2]] = [\r\n\t\t\t\t\t\tthis.heap[c2],\r\n\t\t\t\t\t\tthis.heap[p],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tthis.heapifyDown(c2)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//Checks if heap is empty\r\n\tisEmpty() {\r\n\t\treturn this.end === 0\r\n\t}\r\n\r\n\t//inserts a new value into the heap\r\n\tinsert(value) {\r\n\t\tthis.heap[this.end] = value\r\n\t\tthis.heapifyUp(this.end++)\r\n\t\tthis.html = this.updateHtml()\r\n\t}\r\n\r\n\t//Extracts the top value\r\n\tremoveTop() {\r\n\t\tif (this.isEmpty()) return -111111\r\n\t\tlet temp = this.heap[0]\r\n\t\tthis.heap[0] = this.heap[--this.end]\r\n\t\tthis.heapifyDown()\r\n\t\tthis.heap.pop()\r\n\t\tthis.html = this.updateHtml()\r\n\r\n\t\treturn temp\r\n\t}\r\n\r\n\t//Deletes a specified value\r\n\tdeleteEl(value) {\r\n\t\tlet index = this.heap.indexOf(value)\r\n\t\tif (index === -1) return\r\n\t\tthis.heap[index] = Number.NEGATIVE_INFINITY\r\n\t\tthis.heapifyUp(index)\r\n\t\tthis.removeTop()\r\n\t}\r\n\r\n\t//Updates the whole html\r\n\tupdateHtml(p = 0) {\r\n\t\tif (!this.end) return null\r\n\t\tlet c1 = 2 * p + 1\r\n\t\tlet c2 = c1 + 1\r\n\r\n\t\tif (c2 >= this.end && c1 >= this.end) {\r\n\t\t\treturn (\r\n\t\t\t\t<li key={p}>\r\n\t\t\t\t\t<div className=\"normal\">{this.heap[p]}</div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t} else if (c2 >= this.end && c1 < this.end) {\r\n\t\t\tlet c1Html = this.updateHtml(c1)\r\n\t\t\treturn (\r\n\t\t\t\t<li key={p}>\r\n\t\t\t\t\t<div className=\"normal\">{this.heap[p]}</div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{c1Html}\r\n\t\t\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t} else if (c2 < this.end && c1 >= this.end) {\r\n\t\t\tlet c2Html = this.updateHtml(c2)\r\n\t\t\treturn (\r\n\t\t\t\t<li key={p}>\r\n\t\t\t\t\t<div className=\"normal\">{this.heap[p]}</div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t{c2Html}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tlet c1Html = this.updateHtml(c1)\r\n\t\t\tlet c2Html = this.updateHtml(c2)\r\n\t\t\treturn (\r\n\t\t\t\t<li key={p}>\r\n\t\t\t\t\t<div className=\"normal\">{this.heap[p]}</div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{c1Html}\r\n\t\t\t\t\t\t{c2Html}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t//inserts num random values\r\n\tgenerateRandomMinH(num) {\r\n\t\tlet upper = 0\r\n\t\tlet lower = num * 2 + 10\r\n\t\tlet elements = new Set()\r\n\t\tfor (let i = 0; i < num; i++) {\r\n\t\t\tlet value =\r\n\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\twhile (elements.has(value)) {\r\n\t\t\t\tvalue =\r\n\t\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\t}\r\n\t\t\telements.add(value)\r\n\t\t\tthis.insert(value)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default MinHeap\r\n","import React, { useRef } from 'react'\r\n\r\nfunction MinHeapMenu(props) {\r\n\tconst insertRef = useRef(null)\r\n\tconst removeRef = useRef(null)\r\n\tconst randomRef = useRef(null)\r\n\r\n\tconst insert = () => {\r\n\t\tprops.insert(insertRef.current.value)\r\n\t}\r\n\r\n\tconst remove = () => {\r\n\t\tprops.remove(removeRef.current.value)\r\n\t}\r\n\r\n\tconst random = () => {\r\n\t\tprops.random(randomRef.current.value)\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tprops.random(0)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"menu\">\r\n\t\t\t<ul id=\"mainMinH\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Insert\"\r\n\t\t\t\t\t\tref={insertRef}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) insert()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<button onClick={insert} className=\"insert\">\r\n\t\t\t\t\t\tInsert\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={props.extract}>Extract</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Delete\"\r\n\t\t\t\t\t\tref={removeRef}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) remove()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={props.delError}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<button onClick={remove} className=\"delete\">\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Node count\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tref={randomRef}\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) random()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={random}>Random</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={clear}>Clear</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MinHeapMenu\r\n","import React from 'react'\r\nimport { Icon } from '@iconify/react'\r\nimport closeCircleF from '@iconify/icons-jam/close-circle-f'\r\n\r\nfunction MinHeapPopup(props) {\r\n\treturn (\r\n\t\t<div className=\"popup\">\r\n\t\t\t<div className=\"inner\">\r\n\t\t\t\t<h1>Help</h1>\r\n\t\t\t\t<Icon\r\n\t\t\t\t\tclassName=\"icon\"\r\n\t\t\t\t\tonClick={props.toggle}\r\n\t\t\t\t\twidth=\"35px\"\r\n\t\t\t\t\theight=\"35px\"\r\n\t\t\t\t\ticon={closeCircleF}\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul className=\"help-list\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Insert</button> Inserts a node\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Extract</button> Extracts the Minimum value\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Delete</button> Deletes the node specified\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Random</button> Inserts n random nodes\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Clear</button> Removes all nodes\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"https://www.geeksforgeeks.org/binary-heap/\"\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button className=\"link-button\">\r\n\t\t\t\t\t\t\tLearn About Min Heap\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MinHeapPopup\r\n","import React, { useState, useEffect } from 'react'\r\nimport MinHeap from './DataStructure'\r\nimport MinHeapMenu from './MinHeapMenu'\r\nimport MinHeapPopup from './MinHeapPopup'\r\nimport useDelError from '../../hooks/useDelError'\r\nimport { Icon } from '@iconify/react'\r\nimport questionMarkCircleOutline from '@iconify/icons-eva/question-mark-circle-outline'\r\nimport usePopup from '../../hooks/usePopup'\r\n\r\nfunction MinH(props) {\r\n\t//hooks\r\n\tconst [minHeap, setMinHeap] = useState(null)\r\n\tconst [heapHtml, setHeapHtml] = useState(null)\r\n\tconst [popup, togglePopup] = usePopup()\r\n\tconst [delError, setDelError] = useDelError(heapHtml)\r\n\r\n\t//Initializing MinHeap\r\n\tuseEffect(() => {\r\n\t\tlet tempHeap = new MinHeap()\r\n\t\tsetMinHeap(tempHeap)\r\n\t\treturn () => {\r\n\t\t\tsetMinHeap(null)\r\n\t\t\tsetHeapHtml(null)\r\n\t\t}\r\n\t}, [])\r\n\r\n\t//Insert\r\n\tconst insert = value => {\r\n\t\tvalue = parseInt(value)\r\n\t\tif (!value) return\r\n\t\tlet tempHeap = minHeap\r\n\t\ttempHeap.insert(value)\r\n\t\tsetMinHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\t//Extract the smallest element\r\n\tconst extract = () => {\r\n\t\tlet tempHeap = minHeap\r\n\t\ttempHeap.removeTop()\r\n\t\tsetMinHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\t//Delete Element\r\n\tconst remove = value => {\r\n\t\tvalue = parseInt(value)\r\n\t\tlet tempHeap = minHeap\r\n\r\n\t\tif (tempHeap.heap.indexOf(value) === -1) {\r\n\t\t\tsetDelError(true)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\ttempHeap.deleteEl(value)\r\n\t\tsetMinHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\t//Generate Min Heap with random values\r\n\tconst random = value => {\r\n\t\tvalue = parseInt(value)\r\n\t\tlet tempHeap = new MinHeap(value)\r\n\t\tsetMinHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<header>\r\n\t\t\t\t<h1 className=\"heading\">\r\n\t\t\t\t\tMin Heap{' '}\r\n\t\t\t\t\t<button className=\"i\" onClick={togglePopup}>\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\ticon={questionMarkCircleOutline}\r\n\t\t\t\t\t\t\twidth=\"25px\"\r\n\t\t\t\t\t\t\theight=\"25px\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => props.selector('menu')}\r\n\t\t\t\t\tclassName=\"main-menu-button\"\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</button>\r\n\t\t\t</header>\r\n\t\t\t<MinHeapMenu\r\n\t\t\t\tinsert={insert}\r\n\t\t\t\textract={extract}\r\n\t\t\t\tremove={remove}\r\n\t\t\t\trandom={random}\r\n\t\t\t\tdelError={delError ? 'error' : ''}\r\n\t\t\t/>\r\n\t\t\t<div className=\"traversal\">\r\n\t\t\t\t{minHeap && minHeap.heap.length ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\tHeap:\r\n\t\t\t\t\t\t{minHeap.heap.map((element, index) => (\r\n\t\t\t\t\t\t\t<li key={index}>{element}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>Heap is Empty</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tree\">\r\n\t\t\t\t<ul>{heapHtml}</ul>\r\n\t\t\t</div>\r\n\t\t\t{popup ? <MinHeapPopup toggle={togglePopup} /> : null}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MinH\r\n","import React from 'react'\r\n\r\nclass MaxHeap {\r\n\tconstructor(num = 0) {\r\n\t\tthis.end = 0\r\n\t\tthis.heap = []\r\n\t\tthis.html = null\r\n\t\tif (num) {\r\n\t\t\tthis.generateRandomMaxH(num)\r\n\t\t}\r\n\t}\r\n\r\n\t//Helper Functions\r\n\theapifyUp(j) {\r\n\t\tif (j === 0) return\r\n\t\tlet p = j\r\n\t\tif (p % 2 === 0) p -= 2\r\n\t\telse p--\r\n\t\tp /= 2\r\n\t\tif (this.heap[p] < this.heap[j]) {\r\n\t\t\t;[this.heap[p], this.heap[j]] = [this.heap[j], this.heap[p]]\r\n\t\t\tthis.heapifyUp(p)\r\n\t\t}\r\n\t}\r\n\r\n\theapifyDown(p = 0) {\r\n\t\tlet c1 = 2 * p + 1\r\n\t\tlet c2 = c1 + 1\r\n\r\n\t\tif (c2 >= this.end && c1 >= this.end) return\r\n\t\telse if (c2 >= this.end && c1 < this.end) {\r\n\t\t\tif (this.heap[c1] > this.heap[p]) {\r\n\t\t\t\t;[this.heap[p], this.heap[c1]] = [this.heap[c1], this.heap[p]]\r\n\t\t\t\tthis.heapifyDown(c1)\r\n\t\t\t}\r\n\t\t} else if (c2 < this.end && c1 >= this.end) {\r\n\t\t\tif (this.heap[c2] > this.heap[p]) {\r\n\t\t\t\t;[this.heap[p], this.heap[c2]] = [this.heap[c2], this.heap[p]]\r\n\t\t\t\tthis.heapifyDown(c2)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\tthis.heap[p] < this.heap[c1] ||\r\n\t\t\t\tthis.heap[p] < this.heap[c2]\r\n\t\t\t) {\r\n\t\t\t\tif (this.heap[c1] > this.heap[c2]) {\r\n\t\t\t\t\t;[this.heap[p], this.heap[c1]] = [\r\n\t\t\t\t\t\tthis.heap[c1],\r\n\t\t\t\t\t\tthis.heap[p],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tthis.heapifyDown(c1)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t;[this.heap[p], this.heap[c2]] = [\r\n\t\t\t\t\t\tthis.heap[c2],\r\n\t\t\t\t\t\tthis.heap[p],\r\n\t\t\t\t\t]\r\n\t\t\t\t\tthis.heapifyDown(c2)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//Checks if heap is empty\r\n\tisEmpty() {\r\n\t\treturn this.end === 0\r\n\t}\r\n\r\n\t//Inserts a value into the heap\r\n\tinsert(value) {\r\n\t\tthis.heap[this.end] = value\r\n\t\tthis.heapifyUp(this.end++)\r\n\t\tthis.html = this.updateHtml()\r\n\t}\r\n\r\n\t//Extracts the top value\r\n\tremoveTop() {\r\n\t\tif (this.isEmpty()) return -111111\r\n\t\tlet temp = this.heap[0]\r\n\t\tthis.heap[0] = this.heap[--this.end]\r\n\t\tthis.heapifyDown()\r\n\t\tthis.heap.pop()\r\n\t\tthis.html = this.updateHtml()\r\n\r\n\t\treturn temp\r\n\t}\r\n\r\n\t//Deletes an element\r\n\tdeleteEl(value) {\r\n\t\tlet index = this.heap.indexOf(value)\r\n\t\tif (index === -1) return\r\n\t\tthis.heap[index] = Number.POSITIVE_INFINITY\r\n\t\tthis.heapifyUp(index)\r\n\t\tthis.removeTop()\r\n\t}\r\n\r\n\t//updates the whole html\r\n\tupdateHtml(p = 0) {\r\n\t\tif (!this.end) return null\r\n\t\tlet c1 = 2 * p + 1\r\n\t\tlet c2 = c1 + 1\r\n\r\n\t\tif (c2 >= this.end && c1 >= this.end) {\r\n\t\t\treturn (\r\n\t\t\t\t<li key={p}>\r\n\t\t\t\t\t<div className=\"normal\">{this.heap[p]}</div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t} else if (c2 >= this.end && c1 < this.end) {\r\n\t\t\tlet c1Html = this.updateHtml(c1)\r\n\t\t\treturn (\r\n\t\t\t\t<li key={p}>\r\n\t\t\t\t\t<div className=\"normal\">{this.heap[p]}</div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{c1Html}\r\n\t\t\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t} else if (c2 < this.end && c1 >= this.end) {\r\n\t\t\tlet c2Html = this.updateHtml(c2)\r\n\t\t\treturn (\r\n\t\t\t\t<li key={p}>\r\n\t\t\t\t\t<div className=\"normal\">{this.heap[p]}</div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t{c2Html}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tlet c1Html = this.updateHtml(c1)\r\n\t\t\tlet c2Html = this.updateHtml(c2)\r\n\t\t\treturn (\r\n\t\t\t\t<li key={p}>\r\n\t\t\t\t\t<div className=\"normal\">{this.heap[p]}</div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{c1Html}\r\n\t\t\t\t\t\t{c2Html}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t//Inserts num random values\r\n\tgenerateRandomMaxH(num) {\r\n\t\tlet upper = 0\r\n\t\tlet lower = num * 2 + 10\r\n\t\tlet elements = new Set()\r\n\t\tfor (let i = 0; i < num; i++) {\r\n\t\t\tlet value =\r\n\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\twhile (elements.has(value)) {\r\n\t\t\t\tvalue =\r\n\t\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\t}\r\n\t\t\telements.add(value)\r\n\t\t\tthis.insert(value)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default MaxHeap\r\n","import React, { useRef } from 'react'\r\n\r\nfunction MaxHeapMenu(props) {\r\n\tconst insertRef = useRef(null)\r\n\tconst removeRef = useRef(null)\r\n\tconst randomRef = useRef(null)\r\n\r\n\tconst insert = () => {\r\n\t\tprops.insert(insertRef.current.value)\r\n\t}\r\n\r\n\tconst remove = () => {\r\n\t\tprops.remove(removeRef.current.value)\r\n\t}\r\n\r\n\tconst random = () => {\r\n\t\tprops.random(randomRef.current.value)\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tprops.random(0)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"menu\">\r\n\t\t\t<ul id=\"mainMaxH\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Insert\"\r\n\t\t\t\t\t\tref={insertRef}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) insert()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"insert\" onClick={insert}>\r\n\t\t\t\t\t\tInsert\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={props.extract}>Extract</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Delete\"\r\n\t\t\t\t\t\tref={removeRef}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) remove()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={props.delError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"delete\" onClick={remove}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Node count\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tref={randomRef}\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) random()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={random}>Random</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={clear}>Clear</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MaxHeapMenu\r\n","import React from 'react'\r\nimport { Icon } from '@iconify/react'\r\nimport closeCircleF from '@iconify/icons-jam/close-circle-f'\r\n\r\nfunction MaxHeapPopup(props) {\r\n\treturn (\r\n\t\t<div className=\"popup\">\r\n\t\t\t<div className=\"inner\">\r\n\t\t\t\t<h1>Help</h1>\r\n\t\t\t\t<Icon\r\n\t\t\t\t\tclassName=\"icon\"\r\n\t\t\t\t\tonClick={props.toggle}\r\n\t\t\t\t\twidth=\"35px\"\r\n\t\t\t\t\theight=\"35px\"\r\n\t\t\t\t\ticon={closeCircleF}\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul className=\"help-list\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Insert</button> Inserts a node\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Extract</button> Extracts the Maximum value\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Delete</button> Deletes the node specified\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Random</button> Inserts n random nodes\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Clear</button> Removes all nodes\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"https://www.geeksforgeeks.org/max-heap-in-java/\"\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button className=\"link-button\">\r\n\t\t\t\t\t\t\tLearn About Max Heap\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MaxHeapPopup\r\n","import React, { useState, useEffect } from 'react'\r\nimport MaxHeap from './DataStructure'\r\nimport MaxHeapMenu from './MaxHeapMenu'\r\nimport MaxHeapPopup from './MaxHeapPopup'\r\nimport useDelError from '../../hooks/useDelError'\r\nimport { Icon } from '@iconify/react'\r\nimport questionMarkCircleOutline from '@iconify/icons-eva/question-mark-circle-outline'\r\nimport usePopup from '../../hooks/usePopup'\r\n\r\nfunction MaxH(props) {\r\n\t//hooks\r\n\tconst [maxHeap, setMaxHeap] = useState(null)\r\n\tconst [heapHtml, setHeapHtml] = useState(null)\r\n\tconst [popup, togglePopup] = usePopup()\r\n\tconst [delError, setDelError] = useDelError(heapHtml)\r\n\r\n\t//Initializing MaxHeap\r\n\tuseEffect(() => {\r\n\t\tlet tempHeap = new MaxHeap()\r\n\t\tsetMaxHeap(tempHeap)\r\n\t\treturn () => {\r\n\t\t\tsetMaxHeap(null)\r\n\t\t\tsetHeapHtml(null)\r\n\t\t}\r\n\t}, [])\r\n\r\n\t//Insert\r\n\tconst insert = value => {\r\n\t\tvalue = parseInt(value)\r\n\t\tif (!value) return\r\n\t\tlet tempHeap = maxHeap\r\n\t\ttempHeap.insert(value)\r\n\t\tsetMaxHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\t//Extract the smallest element\r\n\tconst extract = () => {\r\n\t\tlet tempHeap = maxHeap\r\n\t\ttempHeap.removeTop()\r\n\t\tsetMaxHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\t//Delete Element\r\n\tconst remove = value => {\r\n\t\tvalue = parseInt(value)\r\n\t\tlet tempHeap = maxHeap\r\n\r\n\t\tif (tempHeap.heap.indexOf(value) === -1) {\r\n\t\t\tsetDelError(true)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\ttempHeap.deleteEl(value)\r\n\t\tsetMaxHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\t//Generate Max Heap with random values\r\n\tconst random = value => {\r\n\t\tvalue = parseInt(value)\r\n\t\tlet tempHeap = new MaxHeap(value)\r\n\t\tsetMaxHeap(tempHeap)\r\n\t\tsetHeapHtml(tempHeap.html)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<header>\r\n\t\t\t\t<h1 className=\"heading\">\r\n\t\t\t\t\tMax Heap{' '}\r\n\t\t\t\t\t<button className=\"i\" onClick={togglePopup}>\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\ticon={questionMarkCircleOutline}\r\n\t\t\t\t\t\t\twidth=\"25px\"\r\n\t\t\t\t\t\t\theight=\"25px\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => props.selector('menu')}\r\n\t\t\t\t\tclassName=\"main-menu-button\"\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</button>\r\n\t\t\t</header>\r\n\t\t\t<MaxHeapMenu\r\n\t\t\t\tinsert={insert}\r\n\t\t\t\textract={extract}\r\n\t\t\t\tremove={remove}\r\n\t\t\t\trandom={random}\r\n\t\t\t\tdelError={delError ? 'error' : ''}\r\n\t\t\t/>\r\n\t\t\t<div className=\"traversal\">\r\n\t\t\t\t{maxHeap && maxHeap.heap.length ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\tHeap:\r\n\t\t\t\t\t\t{maxHeap.heap.map((element, index) => (\r\n\t\t\t\t\t\t\t<li key={index}>{element}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>Heap is Empty</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tree\">\r\n\t\t\t\t<ul>{heapHtml}</ul>\r\n\t\t\t</div>\r\n\t\t\t{popup ? <MaxHeapPopup toggle={togglePopup} /> : null}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MaxH\r\n","var words = {\r\n\t'words': [\r\n\t\t'step',\r\n\t\t'tremble',\r\n\t\t'dinner',\r\n\t\t'gigantic',\r\n\t\t'elated',\r\n\t\t'torpid',\r\n\t\t'crook',\r\n\t\t'throat',\r\n\t\t'equal',\r\n\t\t'sum',\r\n\t\t'marked',\r\n\t\t'suggestion',\r\n\t\t'dapper',\r\n\t\t'afford',\r\n\t\t'happy',\r\n\t\t'mist',\r\n\t\t'robin',\r\n\t\t'spot',\r\n\t\t'reaction',\r\n\t\t'crayon',\r\n\t\t'irritate',\r\n\t\t'tightfisted',\r\n\t\t'warlike',\r\n\t\t'difficult',\r\n\t\t'distinct',\r\n\t\t'share',\r\n\t\t'spiffy',\r\n\t\t'suspend',\r\n\t\t'base',\r\n\t\t'squeak',\r\n\t\t'abundant',\r\n\t\t'unlock',\r\n\t\t'spiritual',\r\n\t\t'amuse',\r\n\t\t'chance',\r\n\t\t'crowded',\r\n\t\t'friendly',\r\n\t\t'shade',\r\n\t\t'telephone',\r\n\t\t'pig',\r\n\t\t'parcel',\r\n\t\t'part',\r\n\t\t'follow',\r\n\t\t'amount',\r\n\t\t'earthy',\r\n\t\t'collect',\r\n\t\t'sort',\r\n\t\t'drunk',\r\n\t\t'blow',\r\n\t\t'division',\r\n\t\t'curve',\r\n\t\t'seed',\r\n\t\t'sniff',\r\n\t\t'greet',\r\n\t\t'workable',\r\n\t\t'small',\r\n\t\t'detect',\r\n\t\t'week',\r\n\t\t'day',\r\n\t\t'truthful',\r\n\t\t'milk',\r\n\t\t'spotless',\r\n\t\t'coat',\r\n\t\t'escape',\r\n\t\t'debt',\r\n\t\t'optimal',\r\n\t\t'jar',\r\n\t\t'quixotic',\r\n\t\t'lick',\r\n\t\t'inconclusive',\r\n\t\t'bruise',\r\n\t\t'maid',\r\n\t\t'laugh',\r\n\t\t'scare',\r\n\t\t'perform',\r\n\t\t'chivalrous',\r\n\t\t'nonstop',\r\n\t\t'spiteful',\r\n\t\t'ignore',\r\n\t\t'toothbrush',\r\n\t\t'promise',\r\n\t\t'redundant',\r\n\t\t'impulse',\r\n\t\t'value',\r\n\t\t'chalk',\r\n\t\t'appear',\r\n\t\t'sloppy',\r\n\t\t'hook',\r\n\t\t'breathe',\r\n\t\t'wakeful',\r\n\t\t'supreme',\r\n\t\t'cat',\r\n\t\t'arm',\r\n\t\t'settle',\r\n\t\t'orange',\r\n\t\t'zoom',\r\n\t\t'territory',\r\n\t\t'damaging',\r\n\t\t'deliver',\r\n\t\t'children',\r\n\t\t'protect',\r\n\t\t'test',\r\n\t\t'cracker',\r\n\t\t'loutish',\r\n\t\t'disapprove',\r\n\t\t'clover',\r\n\t\t'fry',\r\n\t\t'blink',\r\n\t\t'snails',\r\n\t\t'neck',\r\n\t\t'experience',\r\n\t\t'boy',\r\n\t\t'rely',\r\n\t\t'expert',\r\n\t\t'sulky',\r\n\t\t'things',\r\n\t\t'nation',\r\n\t\t'jewel',\r\n\t\t'crowd',\r\n\t\t'tan',\r\n\t\t'uncovered',\r\n\t\t'abrupt',\r\n\t\t'sad',\r\n\t\t'rambunctious',\r\n\t\t'pricey',\r\n\t\t'slim',\r\n\t\t'skinny',\r\n\t\t'scissors',\r\n\t\t'hour',\r\n\t\t'cuddly',\r\n\t\t'potato',\r\n\t\t'lively',\r\n\t\t'dirt',\r\n\t\t'receipt',\r\n\t\t'great',\r\n\t\t'heap',\r\n\t\t'cherries',\r\n\t\t'lowly',\r\n\t\t'wide',\r\n\t\t'cowardly',\r\n\t\t'insect',\r\n\t\t'behave',\r\n\t\t'zephyr',\r\n\t\t'parallel',\r\n\t\t'interfere',\r\n\t\t'acoustics',\r\n\t\t'head',\r\n\t\t'stir',\r\n\t\t'increase',\r\n\t\t'steady',\r\n\t\t'insurance',\r\n\t\t'dashing',\r\n\t\t'shrug',\r\n\t\t'babies',\r\n\t\t'efficient',\r\n\t\t'chilly',\r\n\t\t'puncture',\r\n\t\t'excuse',\r\n\t\t'advice',\r\n\t\t'example',\r\n\t\t'tin',\r\n\t\t'dry',\r\n\t\t'substance',\r\n\t\t'jazzy',\r\n\t\t'employ',\r\n\t\t'lonely',\r\n\t\t'reduce',\r\n\t\t'majestic',\r\n\t\t'spicy',\r\n\t\t'gaudy',\r\n\t\t'wealthy',\r\n\t\t'rush',\r\n\t\t'channel',\r\n\t\t'harm',\r\n\t\t'quirky',\r\n\t\t'brief',\r\n\t\t'stamp',\r\n\t\t'thought',\r\n\t\t'blot',\r\n\t\t'shop',\r\n\t\t'relax',\r\n\t\t'destruction',\r\n\t\t'zebra',\r\n\t\t'fairies',\r\n\t\t'wish',\r\n\t\t'wobble',\r\n\t\t'wail',\r\n\t\t'light',\r\n\t\t'growth',\r\n\t\t'monkey',\r\n\t\t'mine',\r\n\t\t'yell',\r\n\t\t'boil',\r\n\t\t'egg',\r\n\t\t'shrill',\r\n\t\t'gate',\r\n\t\t'deserve',\r\n\t\t'lettuce',\r\n\t\t'play',\r\n\t\t'pick',\r\n\t\t'shaggy',\r\n\t\t'bee',\r\n\t\t'cross',\r\n\t\t'carry',\r\n\t\t'form',\r\n\t\t'malicious',\r\n\t\t'side',\r\n\t\t'dusty',\r\n\t\t'trick',\r\n\t\t'responsible',\r\n\t\t'visit',\r\n\t\t'maniacal',\r\n\t\t'vast',\r\n\t\t'mitten',\r\n\t\t'visitor',\r\n\t\t'feeling',\r\n\t\t'gorgeous',\r\n\t\t'sneaky',\r\n\t\t'zipper',\r\n\t\t'muddle',\r\n\t\t'thumb',\r\n\t\t'insidious',\r\n\t\t'fresh',\r\n\t\t'passenger',\r\n\t\t'flat',\r\n\t\t'giant',\r\n\t\t'penitent',\r\n\t\t'snail',\r\n\t\t'free',\r\n\t\t'dear',\r\n\t\t'group',\r\n\t\t'smiling',\r\n\t\t'reflect',\r\n\t\t'shut',\r\n\t\t'overjoyed',\r\n\t\t'key',\r\n\t\t'clammy',\r\n\t\t'stone',\r\n\t\t'judge',\r\n\t\t'repulsive',\r\n\t\t'plantation',\r\n\t\t'dreary',\r\n\t\t'town',\r\n\t\t'sincere',\r\n\t\t'expansion',\r\n\t\t'paddle',\r\n\t\t'push',\r\n\t\t'tray',\r\n\t\t'lewd',\r\n\t\t'mice',\r\n\t\t'board',\r\n\t\t'thank',\r\n\t\t'nut',\r\n\t\t'unpack',\r\n\t\t'wash',\r\n\t\t'sister',\r\n\t\t'brainy',\r\n\t\t'purple',\r\n\t\t'preach',\r\n\t\t'merciful',\r\n\t\t'sidewalk',\r\n\t\t'pathetic',\r\n\t\t'start',\r\n\t\t'limit',\r\n\t\t'naive',\r\n\t\t'fantastic',\r\n\t\t'rebel',\r\n\t\t'invent',\r\n\t\t'macho',\r\n\t\t'cellar',\r\n\t\t'sable',\r\n\t\t'list',\r\n\t\t'rob',\r\n\t\t'spiky',\r\n\t\t'savory',\r\n\t\t'cart',\r\n\t\t'nasty',\r\n\t\t'evanescent',\r\n\t\t'shame',\r\n\t\t'hurried',\r\n\t\t'calculator',\r\n\t\t'comb',\r\n\t\t'selfish',\r\n\t\t'internal',\r\n\t\t'axiomatic',\r\n\t\t'seat',\r\n\t\t'return',\r\n\t\t'different',\r\n\t\t'stream',\r\n\t\t'frogs',\r\n\t\t'oval',\r\n\t\t'same',\r\n\t\t'oafish',\r\n\t\t'tug',\r\n\t\t'thoughtless',\r\n\t\t'heady',\r\n\t\t'limping',\r\n\t\t'badge',\r\n\t\t'learned',\r\n\t\t'efficacious',\r\n\t\t'haunt',\r\n\t\t'annoying',\r\n\t\t'battle',\r\n\t\t'tooth',\r\n\t\t'heavy',\r\n\t\t'spectacular',\r\n\t\t'ajar',\r\n\t\t'silent',\r\n\t\t'statuesque',\r\n\t\t'earth',\r\n\t\t'zinc',\r\n\t\t'laborer',\r\n\t\t'boast',\r\n\t\t'faithful',\r\n\t\t'annoy',\r\n\t\t'honey',\r\n\t\t'women',\r\n\t\t'bells',\r\n\t\t'spare',\r\n\t\t'remind',\r\n\t\t'agreement',\r\n\t\t'wry',\r\n\t\t'slave',\r\n\t\t'pumped',\r\n\t\t'nebulous',\r\n\t\t'royal',\r\n\t\t'rot',\r\n\t\t'reign',\r\n\t\t'arrogant',\r\n\t\t'spotted',\r\n\t\t'wire',\r\n\t\t'judicious',\r\n\t\t'graceful',\r\n\t\t'defeated',\r\n\t\t'black',\r\n\t\t'piquant',\r\n\t\t'extend',\r\n\t\t'early',\r\n\t\t'belligerent',\r\n\t\t'dust',\r\n\t\t'cooing',\r\n\t\t'subdued',\r\n\t\t'lip',\r\n\t\t'messy',\r\n\t\t'snake',\r\n\t\t'save',\r\n\t\t'sheet',\r\n\t\t'bow',\r\n\t\t'hulking',\r\n\t\t'accept',\r\n\t\t'inquisitive',\r\n\t\t'mammoth',\r\n\t\t'elderly',\r\n\t\t'land',\r\n\t\t'kiss',\r\n\t\t'freezing',\r\n\t\t'aunt',\r\n\t\t'quack',\r\n\t\t'wave',\r\n\t\t'dogs',\r\n\t\t'knotty',\r\n\t\t'arrest',\r\n\t\t'bell',\r\n\t\t'one',\r\n\t\t'print',\r\n\t\t'underwear',\r\n\t\t'painful',\r\n\t\t'wicked',\r\n\t\t'birthday',\r\n\t\t'cream',\r\n\t\t'proud',\r\n\t\t'sour',\r\n\t\t'greedy',\r\n\t\t'surprise',\r\n\t\t'pray',\r\n\t\t'fetch',\r\n\t\t'furniture',\r\n\t\t'songs',\r\n\t\t'kitty',\r\n\t\t'metal',\r\n\t\t'painstaking',\r\n\t\t'hat',\r\n\t\t'adamant',\r\n\t\t'rifle',\r\n\t\t'charming',\r\n\t\t'scale',\r\n\t\t'heartbreaking',\r\n\t\t'friend',\r\n\t\t'blade',\r\n\t\t'plane',\r\n\t\t'cloth',\r\n\t\t'holistic',\r\n\t\t'yellow',\r\n\t\t'sassy',\r\n\t\t'terrible',\r\n\t\t'bad',\r\n\t\t'toes',\r\n\t\t'parched',\r\n\t\t'secretary',\r\n\t\t'rescue',\r\n\t\t'shiny',\r\n\t\t'need',\r\n\t\t'sticky',\r\n\t\t'explode',\r\n\t\t'squeeze',\r\n\t\t'dime',\r\n\t\t'ancient',\r\n\t\t'idiotic',\r\n\t\t'box',\r\n\t\t'pot',\r\n\t\t'field',\r\n\t\t'handy',\r\n\t\t'cent',\r\n\t\t'drop',\r\n\t\t'rings',\r\n\t\t'taste',\r\n\t\t'bead',\r\n\t\t'ear',\r\n\t\t'camera',\r\n\t\t'month',\r\n\t\t'move',\r\n\t\t'awful',\r\n\t\t'identify',\r\n\t\t'yielding',\r\n\t\t'omniscient',\r\n\t\t'governor',\r\n\t\t'handsome',\r\n\t\t'vegetable',\r\n\t\t'team',\r\n\t\t'odd',\r\n\t\t'sand',\r\n\t\t'show',\r\n\t\t'sweet',\r\n\t\t'numberless',\r\n\t\t'infamous',\r\n\t\t'frightened',\r\n\t\t'watery',\r\n\t\t'wool',\r\n\t\t'cobweb',\r\n\t\t'coal',\r\n\t\t'observe',\r\n\t\t'connection',\r\n\t\t'song',\r\n\t\t'faulty',\r\n\t\t'deafening',\r\n\t\t'jog',\r\n\t\t'match',\r\n\t\t'complain',\r\n\t\t'cut',\r\n\t\t'servant',\r\n\t\t'skirt',\r\n\t\t'sticks',\r\n\t\t'weigh',\r\n\t\t'acid',\r\n\t\t'excellent',\r\n\t\t'damp',\r\n\t\t'glib',\r\n\t\t'devilish',\r\n\t\t'attractive',\r\n\t\t'trashy',\r\n\t\t'nippy',\r\n\t\t'tight',\r\n\t\t'squirrel',\r\n\t\t'power',\r\n\t\t'bite',\r\n\t\t'hang',\r\n\t\t'cynical',\r\n\t\t'rhyme',\r\n\t\t'humdrum',\r\n\t\t'sick',\r\n\t\t'men',\r\n\t\t'late',\r\n\t\t'tempt',\r\n\t\t'duck',\r\n\t\t'eatable',\r\n\t\t'dam',\r\n\t\t'sharp',\r\n\t\t'wistful',\r\n\t\t'third',\r\n\t\t'nimble',\r\n\t\t'agonizing',\r\n\t\t'living',\r\n\t\t'closed',\r\n\t\t'low',\r\n\t\t'hissing',\r\n\t\t'uppity',\r\n\t\t'check',\r\n\t\t'puffy',\r\n\t\t'adjoining',\r\n\t\t'ambiguous',\r\n\t\t'sleepy',\r\n\t\t'tour',\r\n\t\t'rigid',\r\n\t\t'erratic',\r\n\t\t'abhorrent',\r\n\t\t'colossal',\r\n\t\t'vengeful',\r\n\t\t'sky',\r\n\t\t'grotesque',\r\n\t\t'exultant',\r\n\t\t'adaptable',\r\n\t\t'turn',\r\n\t\t'versed',\r\n\t\t'donkey',\r\n\t\t'ask',\r\n\t\t'crazy',\r\n\t\t'useful',\r\n\t\t'pass',\r\n\t\t'medical',\r\n\t\t'prickly',\r\n\t\t'guarded',\r\n\t\t'explain',\r\n\t\t'cooperative',\r\n\t\t'drag',\r\n\t\t'squalid',\r\n\t\t'sock',\r\n\t\t'ruthless',\r\n\t\t'lumber',\r\n\t\t'wrestle',\r\n\t\t'worm',\r\n\t\t'worry',\r\n\t\t'capable',\r\n\t\t'lamp',\r\n\t\t'powder',\r\n\t\t'squeal',\r\n\t\t'control',\r\n\t\t'class',\r\n\t\t'depressed',\r\n\t\t'point',\r\n\t\t'death',\r\n\t\t'gentle',\r\n\t\t'beginner',\r\n\t\t'reply',\r\n\t\t'pour',\r\n\t\t'likeable',\r\n\t\t'actually',\r\n\t\t'preserve',\r\n\t\t'adhesive',\r\n\t\t'clear',\r\n\t\t'cool',\r\n\t\t'squealing',\r\n\t\t'veil',\r\n\t\t'unsuitable',\r\n\t\t'imperfect',\r\n\t\t'count',\r\n\t\t'curvy',\r\n\t\t'brass',\r\n\t\t'even',\r\n\t\t'shoe',\r\n\t\t'alcoholic',\r\n\t\t'beautiful',\r\n\t\t'youthful',\r\n\t\t'treatment',\r\n\t\t'bridge',\r\n\t\t'animal',\r\n\t\t'son',\r\n\t\t'decision',\r\n\t\t'humor',\r\n\t\t'moon',\r\n\t\t'delightful',\r\n\t\t'design',\r\n\t\t'improve',\r\n\t\t'luxuriant',\r\n\t\t'stay',\r\n\t\t'tongue',\r\n\t\t'stingy',\r\n\t\t'collar',\r\n\t\t'highfalutin',\r\n\t\t'disgusting',\r\n\t\t'white',\r\n\t\t'mere',\r\n\t\t'foregoing',\r\n\t\t'hammer',\r\n\t\t'vulgar',\r\n\t\t'gifted',\r\n\t\t'interest',\r\n\t\t'tree',\r\n\t\t'industry',\r\n\t\t'exchange',\r\n\t\t'icicle',\r\n\t\t'snatch',\r\n\t\t'better',\r\n\t\t'cloistered',\r\n\t\t'defiant',\r\n\t\t'skate',\r\n\t\t'park',\r\n\t\t'encouraging',\r\n\t\t'road',\r\n\t\t'abrasive',\r\n\t\t'possible',\r\n\t\t'art',\r\n\t\t'label',\r\n\t\t'whimsical',\r\n\t\t'abnormal',\r\n\t\t'rule',\r\n\t\t'bang',\r\n\t\t'clap',\r\n\t\t'welcome',\r\n\t\t'charge',\r\n\t\t'glass',\r\n\t\t'slimy',\r\n\t\t'eggnog',\r\n\t\t'determined',\r\n\t\t'neat',\r\n\t\t'close',\r\n\t\t'toys',\r\n\t\t'scared',\r\n\t\t'approval',\r\n\t\t'trip',\r\n\t\t'crooked',\r\n\t\t'scrape',\r\n\t\t'dramatic',\r\n\t\t'books',\r\n\t\t'canvas',\r\n\t\t'pipe',\r\n\t\t'window',\r\n\t\t'breezy',\r\n\t\t'hard',\r\n\t\t'two',\r\n\t\t'rice',\r\n\t\t'miss',\r\n\t\t'interrupt',\r\n\t\t'plausible',\r\n\t\t'mom',\r\n\t\t'mountain',\r\n\t\t'morning',\r\n\t\t'watch',\r\n\t\t'hair',\r\n\t\t'strengthen',\r\n\t\t'whisper',\r\n\t\t'reading',\r\n\t\t'trite',\r\n\t\t'burst',\r\n\t\t'manage',\r\n\t\t'touch',\r\n\t\t'ceaseless',\r\n\t\t'weather',\r\n\t\t'thing',\r\n\t\t'swift',\r\n\t\t'detailed',\r\n\t\t'afraid',\r\n\t\t'suspect',\r\n\t\t'silver',\r\n\t\t'enjoy',\r\n\t\t'pancake',\r\n\t\t'flippant',\r\n\t\t'income',\r\n\t\t'madly',\r\n\t\t'tense',\r\n\t\t'vague',\r\n\t\t'quicksand',\r\n\t\t'agree',\r\n\t\t'haircut',\r\n\t\t'aberrant',\r\n\t\t'abject',\r\n\t\t'horses',\r\n\t\t'standing',\r\n\t\t'peel',\r\n\t\t'tiger',\r\n\t\t'average',\r\n\t\t'cultured',\r\n\t\t'lake',\r\n\t\t'shave',\r\n\t\t'mellow',\r\n\t\t'past',\r\n\t\t'giants',\r\n\t\t'rose',\r\n\t\t'enthusiastic',\r\n\t\t'exist',\r\n\t\t'tow',\r\n\t\t'cats',\r\n\t\t'fool',\r\n\t\t'tricky',\r\n\t\t'slippery',\r\n\t\t'travel',\r\n\t\t'tire',\r\n\t\t'bitter',\r\n\t\t'knot',\r\n\t\t'obtain',\r\n\t\t'quiver',\r\n\t\t'dirty',\r\n\t\t'kittens',\r\n\t\t'repeat',\r\n\t\t'descriptive',\r\n\t\t'stem',\r\n\t\t'nest',\r\n\t\t'trousers',\r\n\t\t'mate',\r\n\t\t'smoke',\r\n\t\t'request',\r\n\t\t'automatic',\r\n\t\t'huge',\r\n\t\t'street',\r\n\t\t'bump',\r\n\t\t'church',\r\n\t\t'repair',\r\n\t\t'strange',\r\n\t\t'soggy',\r\n\t\t'argue',\r\n\t\t'elfin',\r\n\t\t'spurious',\r\n\t\t'occur',\r\n\t\t'back',\r\n\t\t'motion',\r\n\t\t'chicken',\r\n\t\t'arch',\r\n\t\t'tickle',\r\n\t\t'shy',\r\n\t\t'nervous',\r\n\t\t'wrap',\r\n\t\t'glove',\r\n\t\t'carve',\r\n\t\t'punishment',\r\n\t\t'zoo',\r\n\t\t'dynamic',\r\n\t\t'door',\r\n\t\t'ablaze',\r\n\t\t'weak',\r\n\t\t'eager',\r\n\t\t'fancy',\r\n\t\t'imminent',\r\n\t\t'current',\r\n\t\t'onerous',\r\n\t\t'joyous',\r\n\t\t'beneficial',\r\n\t\t'voyage',\r\n\t\t'smart',\r\n\t\t'quarter',\r\n\t\t'dance',\r\n\t\t'buzz',\r\n\t\t'oil',\r\n\t\t'letter',\r\n\t\t'dull',\r\n\t\t'kaput',\r\n\t\t'oven',\r\n\t\t'grumpy',\r\n\t\t'can',\r\n\t\t'mix',\r\n\t\t'brush',\r\n\t\t'wealth',\r\n\t\t'record',\r\n\t\t'clip',\r\n\t\t'earn',\r\n\t\t'book',\r\n\t\t'planes',\r\n\t\t'bikes',\r\n\t\t'spark',\r\n\t\t'lucky',\r\n\t\t'frighten',\r\n\t\t'languid',\r\n\t\t'wilderness',\r\n\t\t'drawer',\r\n\t\t'happen',\r\n\t\t'geese',\r\n\t\t'five',\r\n\t\t'fortunate',\r\n\t\t'entertain',\r\n\t\t'tall',\r\n\t\t'slope',\r\n\t\t'invincible',\r\n\t\t'spell',\r\n\t\t'phone',\r\n\t\t'smooth',\r\n\t\t'jobless',\r\n\t\t'woozy',\r\n\t\t'berserk',\r\n\t\t'flock',\r\n\t\t'sea',\r\n\t\t'moor',\r\n\t\t'alarm',\r\n\t\t'stare',\r\n\t\t'aloof',\r\n\t\t'rural',\r\n\t\t'finicky',\r\n\t\t'sprout',\r\n\t\t'distribution',\r\n\t\t'embarrass',\r\n\t\t'groan',\r\n\t\t'melt',\r\n\t\t'salty',\r\n\t\t'bizarre',\r\n\t\t'small',\r\n\t\t'ticket',\r\n\t\t'young',\r\n\t\t'offbeat',\r\n\t\t'material',\r\n\t\t'recondite',\r\n\t\t'woebegone',\r\n\t\t'combative',\r\n\t\t'disarm',\r\n\t\t'trade',\r\n\t\t'yam',\r\n\t\t'wink',\r\n\t\t'pack',\r\n\t\t'pleasant',\r\n\t\t'doll',\r\n\t\t'disastrous',\r\n\t\t'rabbits',\r\n\t\t'shivering',\r\n\t\t'loving',\r\n\t\t'irate',\r\n\t\t'industrious',\r\n\t\t'plastic',\r\n\t\t'cabbage',\r\n\t\t'top',\r\n\t\t'room',\r\n\t\t'cough',\r\n\t\t'bare',\r\n\t\t'release',\r\n\t\t'grab',\r\n\t\t'stain',\r\n\t\t'jail',\r\n\t\t'basketball',\r\n\t\t'magical',\r\n\t\t'incandescent',\r\n\t\t'rustic',\r\n\t\t'vacuous',\r\n\t\t'unfasten',\r\n\t\t'chase',\r\n\t\t'crack',\r\n\t\t'toad',\r\n\t\t'dream',\r\n\t\t'glamorous',\r\n\t\t'impossible',\r\n\t\t'lace',\r\n\t\t'present',\r\n\t\t'detail',\r\n\t\t'gruesome',\r\n\t\t'ill',\r\n\t\t'credit',\r\n\t\t'tramp',\r\n\t\t'stormy',\r\n\t\t'chop',\r\n\t\t'recess',\r\n\t\t'dolls',\r\n\t\t'somber',\r\n\t\t'finger',\r\n\t\t'afterthought',\r\n\t\t'quizzical',\r\n\t\t'confess',\r\n\t\t'nappy',\r\n\t\t'range',\r\n\t\t'bake',\r\n\t\t'glue',\r\n\t\t'remember',\r\n\t\t'flavor',\r\n\t\t'defective',\r\n\t\t'divergent',\r\n\t\t'use',\r\n\t\t'history',\r\n\t\t'psychotic',\r\n\t\t'precious',\r\n\t\t'car',\r\n\t\t'annoyed',\r\n\t\t'fair',\r\n\t\t'wholesale',\r\n\t\t'sparkle',\r\n\t\t'pan',\r\n\t\t'abstracted',\r\n\t\t'grateful',\r\n\t\t'flight',\r\n\t\t'notebook',\r\n\t\t'cause',\r\n\t\t'secret',\r\n\t\t'attempt',\r\n\t\t'obese',\r\n\t\t'trot',\r\n\t\t'card',\r\n\t\t'drum',\r\n\t\t'regret',\r\n\t\t'organic',\r\n\t\t'skip',\r\n\t\t'helpful',\r\n\t\t'time',\r\n\t\t'toe',\r\n\t\t'grandiose',\r\n\t\t'ugly',\r\n\t\t'ants',\r\n\t\t'fuzzy',\r\n\t\t'tasteful',\r\n\t\t'money',\r\n\t\t'blushing',\r\n\t\t'reason',\r\n\t\t'harmony',\r\n\t\t'relieved',\r\n\t\t'shaky',\r\n\t\t'romantic',\r\n\t\t'illegal',\r\n\t\t'perpetual',\r\n\t\t'ski',\r\n\t\t'nail',\r\n\t\t'halting',\r\n\t\t'care',\r\n\t\t'grouchy',\r\n\t\t'religion',\r\n\t\t'ladybug',\r\n\t\t'desert',\r\n\t\t'war',\r\n\t\t'lie',\r\n\t\t'wrist',\r\n\t\t'circle',\r\n\t\t'straight',\r\n\t\t'pop',\r\n\t\t'bed',\r\n\t\t'scratch',\r\n\t\t'nifty',\r\n\t\t'popcorn',\r\n\t\t'baseball',\r\n\t\t'cheer',\r\n\t\t'bath',\r\n\t\t'representative',\r\n\t\t'fertile',\r\n\t\t'train',\r\n\t\t'heavenly',\r\n\t\t'cumbersome',\r\n\t\t'disgusted',\r\n\t\t'tasteless',\r\n\t\t'attraction',\r\n\t\t'whip',\r\n\t\t'country',\r\n\t\t'run',\r\n\t\t'alleged',\r\n\t\t'willing',\r\n\t\t'pin',\r\n\t\t'reflective',\r\n\t\t'supply',\r\n\t\t'reproduce',\r\n\t\t'lazy',\r\n\t\t'frantic',\r\n\t\t'needless',\r\n\t\t'best',\r\n\t\t'addition',\r\n\t\t'communicate',\r\n\t\t'tangible',\r\n\t\t'thin',\r\n\t\t'honorable',\r\n\t\t'argument',\r\n\t\t'carpenter',\r\n\t\t'office',\r\n\t\t'nosy',\r\n\t\t'silky',\r\n\t\t'public',\r\n\t\t'first',\r\n\t\t'jumbled',\r\n\t\t'soda',\r\n\t\t'signal',\r\n\t\t'cure',\r\n\t\t'bike',\r\n\t\t'tawdry',\r\n\t\t'pastoral',\r\n\t\t'hover',\r\n\t\t'decide',\r\n\t\t'crate',\r\n\t\t'dangerous',\r\n\t\t'handle',\r\n\t\t'general',\r\n\t\t'cave',\r\n\t\t'disturbed',\r\n\t\t'shelter',\r\n\t\t'flashy',\r\n\t\t'wrong',\r\n\t\t'meal',\r\n\t\t'nonchalant',\r\n\t\t'functional',\r\n\t\t'sin',\r\n\t\t'question',\r\n\t\t'authority',\r\n\t\t'ordinary',\r\n\t\t'last',\r\n\t\t'military',\r\n\t\t'simple',\r\n\t\t'pat',\r\n\t\t'found',\r\n\t\t'include',\r\n\t\t'toothsome',\r\n\t\t'previous',\r\n\t\t'calendar',\r\n\t\t'smelly',\r\n\t\t'advise',\r\n\t\t'wheel',\r\n\t\t'reject',\r\n\t\t'memorise',\r\n\t\t'vacation',\r\n\t\t'angry',\r\n\t\t'cattle',\r\n\t\t'brake',\r\n\t\t'cows',\r\n\t\t'fence',\r\n\t\t'whole',\r\n\t\t'festive',\r\n\t\t'protest',\r\n\t\t'meek',\r\n\t\t'fragile',\r\n\t\t'enchanted',\r\n\t\t'unit',\r\n\t],\r\n}\r\n\r\nexport default words\r\n","import React from 'react'\r\nimport words from './AllWords'\r\n\r\nclass nodeTrie {\r\n\tconstructor(key) {\r\n\t\tthis.isEnd = false\r\n\t\tthis.children = {}\r\n\t\tthis.parent = null\r\n\t\tthis.key = key\r\n\t\tthis.childrenHtml = []\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.key}>\r\n\t\t\t\t<div className=\"normal\">{key ? key : 'Root'}</div>\r\n\t\t\t\t{this.childrenHtml.length ? (\r\n\t\t\t\t\t<ul>{this.childrenHtml}</ul>\r\n\t\t\t\t) : null}\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\t//Updates the whole html\r\n\tupdateHtml() {\r\n\t\tthis.childrenHtml = []\r\n\t\tfor (let i = 0; i < Object.keys(this.children).length; i++) {\r\n\t\t\tthis.childrenHtml.push(\r\n\t\t\t\tthis.children[Object.keys(this.children)[i]].html\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.key}>\r\n\t\t\t\t<div className={this.isEnd ? 'normal end' : 'normal'}>\r\n\t\t\t\t\t{this.key ? this.key : 'Root'}\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.childrenHtml.length ? (\r\n\t\t\t\t\t<ul>{this.childrenHtml}</ul>\r\n\t\t\t\t) : null}\r\n\t\t\t</li>\r\n\t\t)\r\n\r\n\t\tif (this.parent) this.parent.updateHtml()\r\n\t}\r\n\r\n\t//Highlights the prefix\r\n\tHighlightHtml() {\r\n\t\tthis.childrenHtml = []\r\n\t\tfor (let i = 0; i < Object.keys(this.children).length; i++) {\r\n\t\t\tthis.childrenHtml.push(\r\n\t\t\t\tthis.children[Object.keys(this.children)[i]].html\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.key}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tthis.isEnd ? 'normal highlight end' : 'normal highlight'\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.key ? this.key : 'Root'}\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.childrenHtml.length ? (\r\n\t\t\t\t\t<ul>{this.childrenHtml}</ul>\r\n\t\t\t\t) : null}\r\n\t\t\t</li>\r\n\t\t)\r\n\r\n\t\tif (this.parent) this.parent.HighlightHtml()\r\n\t}\r\n}\r\n\r\nclass Trie {\r\n\tconstructor(num = null) {\r\n\t\tthis.root = new nodeTrie(null)\r\n\t\tthis.highlightStart = null\r\n\t\tif (num) this.randomTrie(num)\r\n\t}\r\n\r\n\t//Insert\r\n\tinsert(word) {\r\n\t\tif (word === '') return\r\n\t\tword = word.trim()\r\n\t\tword = word.toUpperCase()\r\n\t\tlet node = this.root\r\n\t\tfor (let i = 0; i < word.length; i++) {\r\n\t\t\tif (!node.children[word[i]]) {\r\n\t\t\t\tnode.children[word[i]] = new nodeTrie(word[i])\r\n\t\t\t\tnode.children[word[i]].parent = node\r\n\t\t\t}\r\n\t\t\tnode = node.children[word[i]]\r\n\t\t\tif (i === word.length - 1) node.isEnd = true\r\n\t\t}\r\n\t\tnode.updateHtml()\r\n\t}\r\n\r\n\t//SearchWord\r\n\tsearchWord(word) {\r\n\t\tif (word === '') return false\r\n\t\tword = word.trim()\r\n\t\tword = word.toUpperCase()\r\n\t\tlet node = this.root\r\n\t\tfor (let i = 0; i < word.length; i++) {\r\n\t\t\tif (!node.children[word[i]]) return false\r\n\t\t\tnode = node.children[word[i]]\r\n\t\t\tif (i === word.length - 1) return node.isEnd\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\t//Delete word\r\n\tdeleteWord(word) {\r\n\t\tif (!this.searchWord(word)) return\r\n\t\tword = word.trim()\r\n\t\tword = word.toUpperCase()\r\n\t\tlet node = this.root\r\n\t\tfor (let i = 0; i < word.length; i++) {\r\n\t\t\tnode = node.children[word[i]]\r\n\t\t}\r\n\t\tnode.isEnd = false\r\n\r\n\t\tif (\r\n\t\t\tObject.keys(node.children).length === 0 &&\r\n\t\t\tnode.children.constructor === Object\r\n\t\t) {\r\n\t\t\tnode = node.parent\r\n\t\t\tfor (let i = word.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (node === this.root) {\r\n\t\t\t\t\tdelete node.children[word[i]]\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tif (node.isEnd) {\r\n\t\t\t\t\tdelete node.children[word[i]]\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (Object.keys(node.children).length > 1) {\r\n\t\t\t\t\tdelete node.children[word[i]]\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tnode = node.parent\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnode.updateHtml()\r\n\t}\r\n\r\n\trealTimeSearch(word) {\r\n\t\tif (this.highlightStart) this.highlightStart.updateHtml()\r\n\t\tthis.findPrefix(word)\r\n\t}\r\n\r\n\t//findPrefix\r\n\tfindPrefix(word) {\r\n\t\tif (word === '') return false\r\n\t\tword = word.trim()\r\n\t\tword = word.toUpperCase()\r\n\t\tlet node = this.root\r\n\t\tfor (let i = 0; i < word.length; i++) {\r\n\t\t\tif (!node.children[word[i]]) return false\r\n\t\t\tnode = node.children[word[i]]\r\n\t\t}\r\n\t\tnode.HighlightHtml()\r\n\t\tthis.highlightStart = node\r\n\t\treturn true\r\n\t}\r\n\r\n\t//Find all words\r\n\tfindAllWords() {\r\n\t\tlet node = this.root\r\n\t\tlet allWords = []\r\n\t\tfor (let i = 0; i < Object.keys(node.children).length; i++) {\r\n\t\t\tthis.findAllWords2(\r\n\t\t\t\tnode.children[Object.keys(node.children)[i]],\r\n\t\t\t\tallWords\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn allWords\r\n\t}\r\n\r\n\tfindAllWords2(node, allWords, word = '') {\r\n\t\tword += node.key\r\n\t\tif (node.isEnd) allWords.push(word)\r\n\t\tfor (let i = 0; i < Object.keys(node.children).length; i++) {\r\n\t\t\tthis.findAllWords2(\r\n\t\t\t\tnode.children[Object.keys(node.children)[i]],\r\n\t\t\t\tallWords,\r\n\t\t\t\tword\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t//Inserts num random words to the trie\r\n\trandomTrie(num) {\r\n\t\tif (num > 993) num = 993\r\n\t\tlet allWords = words['words']\r\n\t\tlet upper = 0\r\n\t\tlet lower = num * 2 + 10\r\n\t\tlet elements = new Set()\r\n\t\tfor (let i = 0; i < num; i++) {\r\n\t\t\tlet value =\r\n\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\twhile (elements.has(value) || value > 993) {\r\n\t\t\t\tvalue =\r\n\t\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\t}\r\n\t\t\telements.add(value)\r\n\t\t\tthis.insert(allWords[value])\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Trie\r\n","import React, { useRef } from 'react'\r\n\r\nfunction TrieMenu(props) {\r\n\tconst insertRef = useRef(null)\r\n\tconst removeRef = useRef(null)\r\n\tconst searchRef = useRef(null)\r\n\tconst randomRef = useRef(null)\r\n\r\n\tconst insert = () => {\r\n\t\tprops.insert(insertRef.current.value)\r\n\t}\r\n\r\n\tconst remove = () => {\r\n\t\tprops.remove(removeRef.current.value)\r\n\t}\r\n\r\n\tconst search = () => {\r\n\t\tprops.search(searchRef.current.value)\r\n\t}\r\n\r\n\tconst searchFromDel = () => {\r\n\t\tprops.search(removeRef.current.value)\r\n\t}\r\n\r\n\tconst random = () => {\r\n\t\tprops.random(randomRef.current.value)\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tprops.random(0)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"menu trie\">\r\n\t\t\t<ul id=\"mainTrie\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Insert\"\r\n\t\t\t\t\t\tref={insertRef}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) insert()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={insert} className=\"insert\">\r\n\t\t\t\t\t\tInsert\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tref={searchRef}\r\n\t\t\t\t\t\tonChange={search}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Delete\"\r\n\t\t\t\t\t\tref={removeRef}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonChange={searchFromDel}\r\n\t\t\t\t\t\tclassName={props.delError}\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) remove()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={remove} className=\"delete\">\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Node count\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tref={randomRef}\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) random()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={random}>Random</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={clear}>Clear</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TrieMenu\r\n","import React from 'react'\r\nimport { Icon } from '@iconify/react'\r\nimport closeCircleF from '@iconify/icons-jam/close-circle-f'\r\n\r\nfunction TriePopup(props) {\r\n\treturn (\r\n\t\t<div className=\"popup\">\r\n\t\t\t<div className=\"inner\">\r\n\t\t\t\t<h1>Help</h1>\r\n\t\t\t\t<Icon\r\n\t\t\t\t\tclassName=\"icon\"\r\n\t\t\t\t\tonClick={props.toggle}\r\n\t\t\t\t\twidth=\"35px\"\r\n\t\t\t\t\theight=\"35px\"\r\n\t\t\t\t\ticon={closeCircleF}\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul className=\"help-list\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Insert</button> Inserts a word\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Search</button>Highlights the typed prefix\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Delete</button>Deletes a word\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Random</button> Inserts n random words\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Clear</button> Removes all words\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"https://www.geeksforgeeks.org/trie-insert-and-search/\"\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button className=\"link-button\">Learn About Tries</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TriePopup\r\n","import React, { useState, useEffect } from 'react'\r\nimport Trie from './DataStructureN'\r\nimport TrieMenu from './TrieMenu'\r\nimport TriePopup from './TriePopup'\r\nimport useDelError from '../../hooks/useDelError'\r\nimport { Icon } from '@iconify/react'\r\nimport questionMarkCircleOutline from '@iconify/icons-eva/question-mark-circle-outline'\r\nimport usePopup from '../../hooks/usePopup'\r\n\r\nfunction TrieMain(props) {\r\n\t//hooks\r\n\tconst [trie, setTrie] = useState(null)\r\n\tconst [trieHtml, setTrieHtml] = useState(null)\r\n\tconst [words, setWords] = useState([])\r\n\tconst [wordNotFound, setWordNotFound] = useDelError(trieHtml)\r\n\tconst [popup, togglePopup] = usePopup()\r\n\r\n\t//OnMount Behaviour\r\n\tuseEffect(() => {\r\n\t\tlet tempTrie = new Trie()\r\n\t\tsetTrie(tempTrie)\r\n\t\tsetTrieHtml(tempTrie.root.html)\r\n\t\treturn () => {\r\n\t\t\tsetTrie(null)\r\n\t\t\tsetTrieHtml(null)\r\n\t\t}\r\n\t}, [])\r\n\r\n\t//Insert\r\n\tconst insert = word => {\r\n\t\tlet tempTrie = trie\r\n\t\ttempTrie.insert(word)\r\n\t\tsetTrie(tempTrie)\r\n\t\tsetTrieHtml(tempTrie.root.html)\r\n\t\tlistAll()\r\n\t}\r\n\r\n\t//Remove\r\n\tconst remove = word => {\r\n\t\tlet tempTrie = trie\r\n\r\n\t\tif (!tempTrie.searchWord(word)) setWordNotFound(true)\r\n\t\telse setWordNotFound(false)\r\n\r\n\t\ttempTrie.deleteWord(word)\r\n\t\tsetTrie(tempTrie)\r\n\t\tsetTrieHtml(tempTrie.root.html)\r\n\t\tlistAll()\r\n\t}\r\n\r\n\t//Search\r\n\tconst search = word => {\r\n\t\tlet tempTrie = trie\r\n\r\n\t\ttempTrie.realTimeSearch(word)\r\n\t\tsetTrie(tempTrie)\r\n\t\tsetTrieHtml(tempTrie.root.html)\r\n\t}\r\n\r\n\t//Generates random Trie with num words\r\n\tconst random = num => {\r\n\t\tnum = parseInt(num)\r\n\t\tlet tempTrie = new Trie(num)\r\n\t\tsetTrie(tempTrie)\r\n\t\tsetTrieHtml(tempTrie.root.html)\r\n\t\tlistAll(tempTrie)\r\n\t\t// setWordNotFound(false)\r\n\t}\r\n\r\n\t//Listing all words in the trie\r\n\tconst listAll = (tempTrie = trie) => {\r\n\t\tlet tempWords = tempTrie.findAllWords()\r\n\t\tsetWords(tempWords)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<header>\r\n\t\t\t\t<h1 className=\"heading\">\r\n\t\t\t\t\tTrie\r\n\t\t\t\t\t<button className=\"i\" onClick={togglePopup}>\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\ticon={questionMarkCircleOutline}\r\n\t\t\t\t\t\t\twidth=\"25px\"\r\n\t\t\t\t\t\t\theight=\"25px\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => props.selector('menu')}\r\n\t\t\t\t\tclassName=\"main-menu-button\"\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</button>\r\n\t\t\t</header>\r\n\t\t\t<TrieMenu\r\n\t\t\t\tinsert={insert}\r\n\t\t\t\tsearch={search}\r\n\t\t\t\tremove={remove}\r\n\t\t\t\trandom={random}\r\n\t\t\t\tdelError={wordNotFound ? 'error' : ''}\r\n\t\t\t/>\r\n\t\t\t<div className=\"bstlist\">\r\n\t\t\t\t{words.length ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{words.map((word, i) => (\r\n\t\t\t\t\t\t\t<li key={i}>{word}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>Trie is Empty</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tree\">\r\n\t\t\t\t<ul>{trieHtml}</ul>\r\n\t\t\t</div>\r\n\t\t\t{popup ? <TriePopup toggle={togglePopup} /> : null}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TrieMain\r\n","import React, { useRef } from 'react'\r\n\r\nfunction AVLMenu(props) {\r\n\tconst insertRef = useRef(null)\r\n\tconst removeRef = useRef(null)\r\n\tconst searchRef = useRef(null)\r\n\tconst randomRef = useRef(null)\r\n\r\n\tconst insert = () => {\r\n\t\tprops.insert(insertRef.current.value)\r\n\t}\r\n\r\n\tconst remove = () => {\r\n\t\tprops.remove(removeRef.current.value)\r\n\t}\r\n\r\n\tconst search = () => {\r\n\t\tprops.search(searchRef.current.value)\r\n\t}\r\n\r\n\tconst random = () => {\r\n\t\tprops.random(randomRef.current.value)\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tprops.random(0)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"menu\">\r\n\t\t\t<ul id=\"mainAVL\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Insert\"\r\n\t\t\t\t\t\tref={insertRef}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) insert()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"insert\" onClick={insert}>\r\n\t\t\t\t\t\tInsert\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tref={searchRef}\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) search()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={props.seaError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={search}>Search</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Delete\"\r\n\t\t\t\t\t\tref={removeRef}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) remove()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={props.delError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"delete\" onClick={remove}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Node count\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tref={randomRef}\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) random()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={random}>Random</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={clear}>Clear</button>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t\t<li className=\"dropdown\">\r\n\t\t\t\t\t<button>Traversal</button>\r\n\t\t\t\t\t<div className=\"dropdown-content\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button onClick={() => props.traversal('inorder')}>\r\n\t\t\t\t\t\t\t\t\tInorder\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button onClick={() => props.traversal('preorder')}>\r\n\t\t\t\t\t\t\t\t\tPreorder\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button onClick={() => props.traversal('postorder')}>\r\n\t\t\t\t\t\t\t\t\tPostorder\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={props.check}>Check</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AVLMenu\r\n","import React from 'react'\r\n\r\nclass Node {\r\n\tconstructor(value) {\r\n\t\tthis.height = 0\r\n\t\tthis.value = value\r\n\t\tthis.left = null\r\n\t\tthis.right = null\r\n\t\tthis.parent = null\r\n\t\tthis.htmlLeft = (\r\n\t\t\t<li className=\"null\">\r\n\t\t\t\t<div>null</div>\r\n\t\t\t</li>\r\n\t\t)\r\n\r\n\t\tthis.htmlRight = (\r\n\t\t\t<li className=\"null\">\r\n\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t</li>\r\n\t\t)\r\n\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.value}>\r\n\t\t\t\t<div className=\"normal\">\r\n\t\t\t\t\t{this.value} <p className=\"height\">{this.height}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.htmlLeft} {this.htmlRight}\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\t//Inserting html of a new node\r\n\tinsert(node, isLeft) {\r\n\t\tconst newHtml = node.html\r\n\r\n\t\tif (isLeft) {\r\n\t\t\tthis.htmlLeft = newHtml\r\n\t\t} else {\r\n\t\t\tthis.htmlRight = newHtml\r\n\t\t}\r\n\t\tthis.setHtml()\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Updating html of a node\r\n\tsetHtml() {\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.value}>\r\n\t\t\t\t<div className=\"normal\">\r\n\t\t\t\t\t{this.value} <p className=\"height\">{this.height}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.htmlLeft} {this.htmlRight}\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\t//Updating html of the whole tree\r\n\tupdateRootHtml() {\r\n\t\tif (this.parent !== null) {\r\n\t\t\tif (this.parent.left === this) this.parent.insert(this, true)\r\n\t\t\telse this.parent.insert(this, false)\r\n\t\t}\r\n\t}\r\n\r\n\t//Changing a child to null\r\n\tsetChildToNull(isLeft) {\r\n\t\tif (isLeft) {\r\n\t\t\tthis.htmlLeft = (\r\n\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t<div>null</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tthis.htmlRight = (\r\n\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t<div>null</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t}\r\n\t\tthis.setHtml()\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//interchanging a child with a grandchild\r\n\tsetChildToChildsChild(isLeftChild, isLeft) {\r\n\t\tif (isLeftChild) {\r\n\t\t\tif (isLeft) {\r\n\t\t\t\tthis.htmlLeft = this.left.left.html\r\n\t\t\t\tthis.setHtml()\r\n\t\t\t} else {\r\n\t\t\t\tthis.htmlLeft = this.left.right.html\r\n\t\t\t\tthis.setHtml()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (isLeft) {\r\n\t\t\t\tthis.htmlRight = this.right.left.html\r\n\t\t\t\tthis.setHtml()\r\n\t\t\t} else {\r\n\t\t\t\tthis.htmlRight = this.right.right.html\r\n\r\n\t\t\t\tthis.setHtml()\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Removing html of a deleted node\r\n\tremove(childrenCondtion) {\r\n\t\tif (!this.parent) return\r\n\t\tif (!childrenCondtion) {\r\n\t\t\tif (this.parent.left === this) {\r\n\t\t\t\tthis.parent.setChildToNull(true)\r\n\t\t\t} else {\r\n\t\t\t\tthis.parent.setChildToNull(false)\r\n\t\t\t}\r\n\t\t} else if (childrenCondtion === 'left') {\r\n\t\t\tif (this.parent.left === this) {\r\n\t\t\t\tthis.parent.setChildToChildsChild(true, true)\r\n\t\t\t} else {\r\n\t\t\t\tthis.parent.setChildToChildsChild(false, true)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.parent.left === this) {\r\n\t\t\t\tthis.parent.setChildToChildsChild(true, false)\r\n\t\t\t} else {\r\n\t\t\t\tthis.parent.setChildToChildsChild(false, false)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//Updates value of a node html\r\n\tupdateValue(value) {\r\n\t\tthis.value = value\r\n\t\tthis.setHtml()\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Adds Highlight to node html\r\n\taddHighlight() {\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.value}>\r\n\t\t\t\t<div className=\"normal highlight\">\r\n\t\t\t\t\t{this.value} <p className=\"height\">{this.height}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.htmlLeft} {this.htmlRight}\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t)\r\n\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Clears Highlight of the node html\r\n\tclearHighlight() {\r\n\t\tthis.setHtml()\r\n\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Updating html after balancing\r\n\tbalanceHtml() {\r\n\t\tif (!this.left && this.right) {\r\n\t\t\tthis.right.balanceHtml()\r\n\r\n\t\t\tthis.htmlRight = this.right.html\r\n\t\t\tthis.setChildToNull(true)\r\n\t\t} else if (!this.right && this.left) {\r\n\t\t\tthis.left.balanceHtml()\r\n\r\n\t\t\tthis.htmlLeft = this.left.html\r\n\t\t\tthis.setChildToNull(false)\r\n\t\t} else if (this.right && this.left) {\r\n\t\t\tthis.left.balanceHtml()\r\n\t\t\tthis.right.balanceHtml()\r\n\r\n\t\t\tthis.htmlLeft = this.left.html\r\n\t\t\tthis.htmlRight = this.right.html\r\n\t\t\tthis.setHtml()\r\n\t\t\tthis.updateRootHtml()\r\n\t\t} else {\r\n\t\t\tthis.htmlLeft = (\r\n\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t<div>null</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\r\n\t\t\tthis.htmlRight = (\r\n\t\t\t\t<li className=\"null\">\r\n\t\t\t\t\t<div className=\"null\">null</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t\tthis.setHtml()\r\n\t\t\tthis.updateRootHtml()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass AVL {\r\n\tconstructor(num = 0) {\r\n\t\tthis.root = null\r\n\t\tif (num) {\r\n\t\t\tthis.generateRandomBST(num)\r\n\t\t}\r\n\t\tthis.highlighted = null\r\n\t\tthis.leafDepth = -1\r\n\t}\r\n\r\n\t//Helper functions\r\n\trotateRight(node) {\r\n\t\tlet tempNode = node.left\r\n\t\tif (node.left.right) node.left.right.parent = node\r\n\t\tnode.left = node.left.right\r\n\r\n\t\t//For Handling HTML\r\n\t\ttempNode.parent = node.parent\r\n\t\tnode.parent = tempNode\r\n\t\t//For Handling HTML END\r\n\r\n\t\ttempNode.right = node\r\n\t\ttempNode.height = this.setHeight(tempNode)\r\n\t\tnode.height = this.setHeight(node)\r\n\t\treturn tempNode\r\n\t}\r\n\r\n\trotateLeft(node) {\r\n\t\tlet tempNode = node.right\r\n\t\tif (node.right.left) node.right.left.parent = node\r\n\t\tnode.right = node.right.left\r\n\r\n\t\t//For Handling HTML\r\n\t\ttempNode.parent = node.parent\r\n\t\tnode.parent = tempNode\r\n\t\t//For Handling HTML END\r\n\r\n\t\ttempNode.left = node\r\n\t\t// tempNode.left\r\n\t\ttempNode.height = this.setHeight(tempNode)\r\n\t\tnode.height = this.setHeight(node)\r\n\t\treturn tempNode\r\n\t}\r\n\r\n\t//Sets hight of a node\r\n\tsetHeight(node) {\r\n\t\tif (node === null) return -1\r\n\t\tlet leftHeight = node.left !== null ? node.left.height : -1\r\n\t\tlet rightHeight = node.right !== null ? node.right.height : -1\r\n\t\treturn Math.max(leftHeight, rightHeight) + 1\r\n\t}\r\n\r\n\t//Checks if a sub tree is balanced\r\n\tbalanceCheck(node) {\r\n\t\tif (node === null) return 0\r\n\t\tlet leftHeight = node.left !== null ? node.left.height : -1\r\n\t\tlet rightHeight = node.right !== null ? node.right.height : -1\r\n\t\treturn leftHeight - rightHeight\r\n\t}\r\n\r\n\t//Balances the Tree\r\n\tbalance(node) {\r\n\t\tlet balance = this.balanceCheck(node)\r\n\t\tif (balance > 1) {\r\n\t\t\tif (\r\n\t\t\t\tthis.setHeight(node.left.left) >\r\n\t\t\t\tthis.setHeight(node.left.right)\r\n\t\t\t) {\r\n\t\t\t\tnode = this.rotateRight(node)\r\n\t\t\t} else {\r\n\t\t\t\tnode.left = this.rotateLeft(node.left)\r\n\r\n\t\t\t\tnode = this.rotateRight(node)\r\n\t\t\t}\r\n\t\t} else if (balance < -1) {\r\n\t\t\tif (\r\n\t\t\t\tthis.setHeight(node.right.right) >\r\n\t\t\t\tthis.setHeight(node.right.left)\r\n\t\t\t) {\r\n\t\t\t\tnode = this.rotateLeft(node)\r\n\t\t\t} else {\r\n\t\t\t\tnode.right = this.rotateRight(node.right)\r\n\r\n\t\t\t\tnode = this.rotateLeft(node)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (node !== null) node.height = this.setHeight(node)\r\n\t\tif (node && node.right) node.right.balanceHtml()\r\n\t\tif (node && node.left) node.left.balanceHtml()\r\n\t\treturn node\r\n\t}\r\n\r\n\tfindMax(node = this.root) {\r\n\t\tif (node == null) {\r\n\t\t\treturn node\r\n\t\t} else if (node.right == null) {\r\n\t\t\treturn node\r\n\t\t} else {\r\n\t\t\treturn this.findMax(node.right)\r\n\t\t}\r\n\t}\r\n\r\n\tfindMin(node = this.root) {\r\n\t\tif (node == null) {\r\n\t\t\treturn node\r\n\t\t} else if (node.left == null) {\r\n\t\t\treturn node\r\n\t\t} else {\r\n\t\t\treturn this.findMin(node.left)\r\n\t\t}\r\n\t}\r\n\r\n\t//inserting a new node\r\n\tinsert(value) {\r\n\t\tthis.clearHighlight()\r\n\t\tvar newNode = new Node(value)\r\n\t\tif (this.root === null) this.root = newNode\r\n\t\telse this.root = this.insertNode(this.root, newNode)\r\n\t}\r\n\r\n\tinsertNode(node, newNode) {\r\n\t\tif (newNode.value < node.value) {\r\n\t\t\tif (node.left === null) {\r\n\t\t\t\tnode.left = newNode\r\n\t\t\t\tnewNode.parent = node\r\n\t\t\t\tnode.insert(newNode, true)\r\n\t\t\t} else node.left = this.insertNode(node.left, newNode)\r\n\t\t} else {\r\n\t\t\tif (node.right === null) {\r\n\t\t\t\tnode.right = newNode\r\n\t\t\t\tnewNode.parent = node\r\n\t\t\t\tnode.insert(newNode, false)\r\n\t\t\t} else node.right = this.insertNode(node.right, newNode)\r\n\t\t}\r\n\r\n\t\tnode = this.balance(node)\r\n\t\treturn node\r\n\t}\r\n\r\n\t//Deleting node\r\n\tremove(value) {\r\n\t\tthis.clearHighlight()\r\n\t\tthis.root = this.removeNode(this.root, value)\r\n\t}\r\n\r\n\tremoveNode(node, value) {\r\n\t\tif (node === null || typeof node === 'undefined') return null\r\n\t\telse if (value < node.value) {\r\n\t\t\tnode.left = this.removeNode(node.left, value)\r\n\t\t\t// return node\r\n\t\t} else if (value > node.value) {\r\n\t\t\tnode.right = this.removeNode(node.right, value)\r\n\t\t\t// return node\r\n\t\t} else {\r\n\t\t\tif (node.left === null && node.right === null) {\r\n\t\t\t\tnode.remove(null)\r\n\t\t\t\tnode = null\r\n\t\t\t\t// return node\r\n\t\t\t} else if (node.left === null) {\r\n\t\t\t\tnode.remove('right')\r\n\t\t\t\tnode.right.parent = node.parent\r\n\t\t\t\tnode = node.right\r\n\t\t\t\t// return node\r\n\t\t\t} else if (node.right === null) {\r\n\t\t\t\tnode.remove('left')\r\n\t\t\t\tnode.left.parent = node.parent\r\n\t\t\t\tnode = node.left\r\n\t\t\t\t// return node\r\n\t\t\t} else {\r\n\t\t\t\tvar minNodeOfRight = this.findMin(node.right)\r\n\t\t\t\tnode.updateValue(minNodeOfRight.value)\r\n\r\n\t\t\t\tnode.right = this.removeNode(node.right, minNodeOfRight.value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tnode = this.balance(node)\r\n\t\treturn node\r\n\t}\r\n\r\n\t//Tree Traversal\r\n\tpreorder(list, node = this.root) {\r\n\t\tif (node !== null) {\r\n\t\t\tlist.push(node.value)\r\n\t\t\tthis.preorder(list, node.left)\r\n\t\t\tthis.preorder(list, node.right)\r\n\t\t}\r\n\t}\r\n\r\n\tinorder(list, node = this.root) {\r\n\t\tif (node !== null) {\r\n\t\t\tthis.inorder(list, node.left)\r\n\t\t\tlist.push(node.value)\r\n\t\t\tthis.inorder(list, node.right)\r\n\t\t}\r\n\t}\r\n\r\n\tpostorder(list, node = this.root) {\r\n\t\tif (node !== null) {\r\n\t\t\tthis.postorder(list, node.left)\r\n\t\t\tthis.postorder(list, node.right)\r\n\t\t\tlist.push(node.value)\r\n\t\t}\r\n\t}\r\n\r\n\t//Search\r\n\tsearch(value, node = this.root) {\r\n\t\tthis.clearHighlight()\r\n\r\n\t\tif (node === null) return false\r\n\t\telse if (node.value === value) {\r\n\t\t\tnode.addHighlight()\r\n\t\t\tthis.highlighted = node\r\n\t\t\treturn true\r\n\t\t} else if (node.value > value)\r\n\t\t\treturn this.search(value, node.left)\r\n\t\telse return this.search(value, node.right)\r\n\t}\r\n\r\n\t//Random Tree generator\r\n\tgenerateRandomBST(num) {\r\n\t\tlet upper = 0\r\n\t\tlet lower = num * 2 + 10\r\n\t\tlet elements = new Set()\r\n\r\n\t\tfor (let i = 0; i < num; i++) {\r\n\t\t\tlet value =\r\n\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\twhile (elements.has(value)) {\r\n\t\t\t\tvalue =\r\n\t\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\t}\r\n\t\t\telements.add(value)\r\n\r\n\t\t\tthis.insert(value)\r\n\t\t}\r\n\t}\r\n\r\n\t//BST Checker\r\n\t//Main Checker function\r\n\tcheckBST() {\r\n\t\tlet BSTTypeList = []\r\n\t\tif (this.isBalanced()) {\r\n\t\t\tBSTTypeList.push('Balanced')\r\n\t\t}\r\n\t\tif (this.isComplete()) {\r\n\t\t\tBSTTypeList.push('Complete')\r\n\t\t}\r\n\t\tif (this.isPerfect()) {\r\n\t\t\tBSTTypeList.push('Perfect')\r\n\t\t}\r\n\t\tif (this.isFull()) {\r\n\t\t\tBSTTypeList.push('Full')\r\n\t\t}\r\n\t\treturn BSTTypeList\r\n\t}\r\n\r\n\t//Subfunctions\r\n\t//balance\r\n\tisBalanced(node = this.root) {\r\n\t\tif (node === null) return true\r\n\t\tlet leftH = node.left ? node.left.height : -1\r\n\t\tlet rightH = node.right ? node.right.height : -1\r\n\t\tif (Math.abs(leftH - rightH) <= 1) {\r\n\t\t\treturn this.isBalanced(node.left) && this.isBalanced(node.right)\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\t//complete\r\n\tisComplete() {\r\n\t\tlet totalNodes = this.countNodes()\r\n\t\treturn this.isComplete2(0, totalNodes)\r\n\t}\r\n\tisComplete2(index, totalNodes, node = this.root) {\r\n\t\tif (node === null) return true\r\n\t\telse if (index >= totalNodes) return false\r\n\t\telse {\r\n\t\t\tlet ans = this.isComplete2(index * 2 + 1, totalNodes, node.left)\r\n\t\t\tans &= this.isComplete2(index * 2 + 2, totalNodes, node.right)\r\n\t\t\treturn ans\r\n\t\t}\r\n\t}\r\n\r\n\t//perfect EDITED\r\n\tisPerfect() {\r\n\t\tif (!this.isFull() || !this.isComplete()) return false\r\n\t\treturn this.isPerfect2()\r\n\t}\r\n\r\n\tisPerfect2(node = this.root, depth = 0) {\r\n\t\tif (!node) return true\r\n\t\tdepth++\r\n\t\tif (!node.right && !node.left) {\r\n\t\t\tif (this.leafDepth !== -1 && this.leafDepth !== depth)\r\n\t\t\t\treturn false\r\n\t\t\tthis.leafDepth = depth\r\n\t\t}\r\n\t\treturn (\r\n\t\t\tthis.isPerfect2(node.left, depth) &&\r\n\t\t\tthis.isPerfect2(node.right, depth)\r\n\t\t)\r\n\t}\r\n\r\n\t//full\r\n\tisFull(node = this.root) {\r\n\t\tif (node === null) return true\r\n\t\telse if (node.left === null && node.right === null) return true\r\n\t\telse if (node.left !== null && node.right !== null) {\r\n\t\t\tlet ans\r\n\t\t\tans = this.isFull(node.left)\r\n\t\t\tans &= this.isFull(node.right)\r\n\t\t\treturn ans\r\n\t\t} else return false\r\n\t}\r\n\r\n\tcountNodes(node = this.root) {\r\n\t\tif (node === null) return 0\r\n\t\treturn (\r\n\t\t\tthis.countNodes(node.left) + 1 + this.countNodes(node.right)\r\n\t\t)\r\n\t}\r\n\r\n\t//Clears highlight of previously searched nodes\r\n\tclearHighlight() {\r\n\t\tif (this.highlighted) {\r\n\t\t\tthis.highlighted.clearHighlight()\r\n\t\t\tthis.highlighted = null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default AVL\r\n","import React from 'react'\r\nimport { Icon } from '@iconify/react'\r\nimport closeCircleF from '@iconify/icons-jam/close-circle-f'\r\n\r\nfunction AVLPopup(props) {\r\n\treturn (\r\n\t\t<div className=\"popup\">\r\n\t\t\t<div className=\"inner\">\r\n\t\t\t\t<h1>Help</h1>\r\n\t\t\t\t<Icon\r\n\t\t\t\t\tclassName=\"icon\"\r\n\t\t\t\t\tonClick={props.toggle}\r\n\t\t\t\t\twidth=\"35px\"\r\n\t\t\t\t\theight=\"35px\"\r\n\t\t\t\t\ticon={closeCircleF}\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul className=\"help-list\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Insert</button> Inserts a node\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Search</button> Searches and highlights the\r\n\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Delete</button> Deletes the node\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Random</button> Inserts n random nodes\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Clear</button> Removes all nodes\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Traversal</button> Performs chosen traversal\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Check</button>Checks whether AVL Tree is\r\n\t\t\t\t\t\t\tBalanced, Complete, Perfect or Full\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"https://www.geeksforgeeks.org/avl-tree-set-1-insertion/\"\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button className=\"link-button\">\r\n\t\t\t\t\t\t\tLearn About AVL Trees\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AVLPopup\r\n","import React, { useState, useEffect } from 'react'\r\nimport AVLMenu from './AVLMenu'\r\nimport AVL from './DataStructure'\r\nimport AVLPopup from './AVLPopup'\r\nimport useDelError from '../../hooks/useDelError'\r\nimport { Icon } from '@iconify/react'\r\nimport questionMarkCircleOutline from '@iconify/icons-eva/question-mark-circle-outline'\r\nimport usePopup from '../../hooks/usePopup'\r\nimport useTraversal from '../../hooks/useTraversal'\r\n\r\nfunction AVLTree(props) {\r\n\t//hooks\r\n\tconst [tree, setTree] = useState()\r\n\tconst [treeHtml, setTreeHtml] = useState()\r\n\tconst [bstList, setBstList] = useState([])\r\n\tconst [delError, setDelError] = useDelError(treeHtml)\r\n\tconst [searchError, setSearchError] = useDelError(treeHtml)\r\n\tconst [traversalList, traversalDispatch] = useTraversal(tree)\r\n\tconst [popup, togglePopup] = usePopup()\r\n\r\n\t//Initializing Tree\r\n\tuseEffect(() => {\r\n\t\tlet tempTree = new AVL()\r\n\t\tsetTree(tempTree)\r\n\t\treturn () => {\r\n\t\t\tsetTree(null)\r\n\t\t\tsetTreeHtml(null)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBstList([])\r\n\r\n\t}, [treeHtml])\r\n\r\n\t//Insert Function\r\n\tconst insert = val => {\r\n\t\tval = parseInt(val)\r\n\t\tif (!val) return\r\n\t\tlet tempTree = tree\r\n\t\ttempTree.insert(val)\r\n\t\tsetTree(tempTree)\r\n\t\tsetTreeHtml(tree.root.html)\r\n\t\ttraversalDispatch('clear')\r\n\r\n\t}\r\n\r\n\t//Remove\r\n\tconst remove = val => {\r\n\t\tval = parseInt(val)\r\n\t\tlet tempTree = tree\r\n\t\tsetDelError(false)\r\n\t\tif (!tempTree.search(val)) {\r\n\t\t\tsetDelError(true)\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttempTree.remove(val)\r\n\t\tsetTree(tempTree)\r\n\t\tif (tree.root) setTreeHtml(tree.root.html)\r\n\t\telse setTreeHtml(null)\r\n\t\ttraversalDispatch('clear')\r\n\r\n\t}\r\n\r\n\t//Search\r\n\tconst search = val => {\r\n\t\tval = parseInt(val)\r\n\t\tlet tempTree = tree\r\n\r\n\t\tsetSearchError(false)\r\n\t\tif (!tempTree.search(val)) {\r\n\t\t\tsetSearchError(true)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\ttempTree.search(val)\r\n\t\tsetTree(tempTree)\r\n\t\tif (tree.root) setTreeHtml(tree.root.html)\r\n\t\telse setTreeHtml(null)\r\n\t}\r\n\r\n\t//Generate Random BST with num nodes\r\n\tconst random = num => {\r\n\t\tnum = parseInt(num)\r\n\t\tif (num < 0) return\r\n\t\tlet tempTree = new AVL(num)\r\n\t\tsetTree(tempTree)\r\n\t\tif (num) setTreeHtml(tempTree.root.html)\r\n\t\telse setTreeHtml(null)\r\n\t\ttraversalDispatch('clear')\r\n\r\n\t}\r\n\r\n\t//Checks whether BST is balanced, complete, perfect or full\r\n\tconst check = () => {\r\n\t\tlet tempList = tree.checkBST()\r\n\t\tif (!tempList.length) tempList.push('No Type Match')\r\n\t\tsetBstList(tempList)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<header >\r\n\t\t\t\t<h1 className=\"heading\">AVL Tree\r\n\t\t\t\t<button className=\"i\" onClick={togglePopup}>\r\n\t\t\t\t\t<Icon\r\n\t\t\t\t\t\ticon={questionMarkCircleOutline}\r\n\t\t\t\t\t\twidth=\"25px\"\r\n\t\t\t\t\t\theight=\"25px\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</button></h1>\r\n\t\t\t</header>\r\n\t\t\t<button onClick={() => props.selector('menu')} className=\"main-menu-button\">Home</button>\r\n\t\t\t<AVLMenu\r\n\t\t\t\tinsert={insert}\r\n\t\t\t\tremove={remove}\r\n\t\t\t\tsearch={search}\r\n\t\t\t\trandom={random}\r\n\t\t\t\ttraversal={traversalDispatch}\r\n\t\t\t\tcheck={check}\r\n\t\t\t\tdelError={delError ? 'error' : ''}\r\n\t\t\tseaError={searchError ? 'error' : ''}\r\n\t\t\t/>\r\n\t\t\t<div className=\"traversal\">\r\n\t\t\t\t{traversalList.list.length ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t{traversalList.op}:\r\n\t\t\t\t\t\t{traversalList.list.map((item, index) => (\r\n\t\t\t\t\t\t\t<li key={index}>{item}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>No Traversal Performed</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"bstlist\">\r\n\t\t\t\t{bstList.length ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t{bstList.map((item, index) => (\r\n\t\t\t\t\t\t\t<li key={index}>{item}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>Not yet checked</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tree\">\r\n\t\t\t\t<ul>{treeHtml}</ul>\r\n\t\t\t</div>\r\n\t\t\t{popup ? <AVLPopup toggle={togglePopup} /> : null}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AVLTree\r\n","import React, { useRef } from 'react'\r\n\r\nfunction RedBMenu(props) {\r\n\tconst insertRef = useRef(null)\r\n\tconst removeRef = useRef(null)\r\n\tconst searchRef = useRef(null)\r\n\tconst randomRef = useRef(null)\r\n\r\n\tconst insert = () => {\r\n\t\tprops.insert(insertRef.current.value)\r\n\t}\r\n\r\n\tconst remove = () => {\r\n\t\tprops.remove(removeRef.current.value)\r\n\t}\r\n\r\n\tconst search = () => {\r\n\t\tprops.search(searchRef.current.value)\r\n\t}\r\n\r\n\tconst random = () => {\r\n\t\tprops.random(randomRef.current.value)\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tprops.random(0)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"menu\">\r\n\t\t\t<ul id=\"mainRedB\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Insert\"\r\n\t\t\t\t\t\tref={insertRef}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) insert()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<button onClick={insert} className=\"insert\">\r\n\t\t\t\t\t\tInsert\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tref={searchRef}\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) search()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={props.seaError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={search}>Search</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Delete\"\r\n\t\t\t\t\t\tref={removeRef}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) remove()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={props.delError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={remove} className=\"delete\">\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Node count\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tref={randomRef}\r\n\t\t\t\t\t\tonKeyUp={e => {\r\n\t\t\t\t\t\t\tif (e.keyCode === 13) random()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={random}>Random</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={clear}>Clear</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"dropdown\">\r\n\t\t\t\t\t<button>Traversal</button>\r\n\t\t\t\t\t<div className=\"dropdown-content\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button onClick={() => props.traversal('inorder')}>\r\n\t\t\t\t\t\t\t\t\tInorder\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button onClick={() => props.traversal('preorder')}>\r\n\t\t\t\t\t\t\t\t\tPreorder\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button onClick={() => props.traversal('postorder')}>\r\n\t\t\t\t\t\t\t\t\tPostorder\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button onClick={props.check}>Check</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RedBMenu\r\n","import React from 'react'\r\n\r\nvar black = 0\r\nvar red = 1\r\n\r\nclass NullNode {\r\n\tconstructor() {\r\n\t\tthis.color = black\r\n\t\tthis.isNull = true\r\n\t\tthis.parent = null\r\n\t\tthis.html = (\r\n\t\t\t<li className=\"null\">\r\n\t\t\t\t<div className={`null black`}>null</div>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass Node {\r\n\tconstructor(value) {\r\n\t\tlet newNullNode = new NullNode()\r\n\t\tnewNullNode.parent = this\r\n\t\tthis.value = value\r\n\t\tthis.color = red\r\n\t\tthis.right = newNullNode\r\n\t\tthis.left = newNullNode\r\n\t\tthis.parent = null\r\n\t\tthis.isNull = false\r\n\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.value}>\r\n\t\t\t\t<div className={`normal red`}>{this.value}</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.left.html} {this.right.html}\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\t//Updating html of a node\r\n\tsetHtml() {\r\n\t\tlet color = this.color ? 'red' : 'black'\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.value}>\r\n\t\t\t\t<div className={`normal ${color}`}>{this.value}</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.left.html} {this.right.html}\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\t//Updating html of the whole tree\r\n\tupdateRootHtml() {\r\n\t\tif (this.parent !== null) {\r\n\t\t\tif (this.parent.left === this) this.parent.insert(this, true)\r\n\t\t\telse this.parent.insert(this, false)\r\n\t\t}\r\n\t}\r\n\r\n\t//Inserting new node to tree\r\n\tinsert() {\r\n\t\tthis.setHtml()\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Adds Highlight to node html\r\n\taddHighlight() {\r\n\t\tlet color = this.color ? 'red' : 'black'\r\n\t\tthis.html = (\r\n\t\t\t<li key={this.value}>\r\n\t\t\t\t<div className={`normal ${color} highlight`}>\r\n\t\t\t\t\t{this.value}\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.left.html} {this.right.html}\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t)\r\n\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n\r\n\t//Clears Highlight of the node html\r\n\tclearHighlight() {\r\n\t\tthis.setHtml()\r\n\r\n\t\tthis.updateRootHtml()\r\n\t}\r\n}\r\n\r\nclass RBT {\r\n\tconstructor(num = 0) {\r\n\t\tlet newNullNode = new NullNode()\r\n\t\tthis.root = newNullNode\r\n\t\tif (num) {\r\n\t\t\tthis.generateRandomBST(num)\r\n\t\t}\r\n\t\tthis.highlighted = null\r\n\t\tthis.leafDepth = -1\r\n\t}\r\n\r\n\t//Helper functions\r\n\t//Rotate right\r\n\trotateRight(node, toRecolor) {\r\n\t\tlet parent = node.parent\r\n\t\tnode.parent = parent.parent\r\n\t\tif (parent.parent !== null) {\r\n\t\t\tif (parent.parent.left === parent) {\r\n\t\t\t\tparent.parent.left = node\r\n\t\t\t} else {\r\n\t\t\t\tparent.parent.right = node\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet right = node.right\r\n\t\tnode.right = parent\r\n\t\tparent.parent = node\r\n\t\tparent.left = right\r\n\t\tright.parent = parent\r\n\t\tif (toRecolor) {\r\n\t\t\tnode.color = black\r\n\t\t\tparent.color = red\r\n\t\t}\r\n\t}\r\n\r\n\t//Rotate left\r\n\trotateLeft(node, toRecolor) {\r\n\t\tlet parent = node.parent\r\n\t\tnode.parent = parent.parent\r\n\t\tif (parent.parent !== null) {\r\n\t\t\tif (parent.parent.right === parent) {\r\n\t\t\t\tparent.parent.right = node\r\n\t\t\t} else {\r\n\t\t\t\tparent.parent.left = node\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet left = node.left\r\n\t\tnode.left = parent\r\n\t\tparent.parent = node\r\n\t\tparent.right = left\r\n\t\tleft.parent = parent\r\n\t\tif (toRecolor) {\r\n\t\t\tnode.color = black\r\n\t\t\tparent.color = red\r\n\t\t}\r\n\t}\r\n\r\n\t//Find sibling\r\n\tsiblingOf(node) {\r\n\t\tif (node.parent === null) return null\r\n\t\tif (node.parent.left === node) {\r\n\t\t\treturn node.parent.right\r\n\t\t} else {\r\n\t\t\treturn node.parent.left\r\n\t\t}\r\n\t}\r\n\r\n\t//Finding min value\r\n\tfindMin(node = this.root) {\r\n\t\tif (node.isNull) {\r\n\t\t\treturn node\r\n\t\t} else if (node.left.isNull) {\r\n\t\t\treturn node\r\n\t\t} else {\r\n\t\t\treturn this.findMin(node.left)\r\n\t\t}\r\n\t}\r\n\r\n\t//Insert\r\n\tinsert(value) {\r\n\t\tthis.root = this.insertNode(null, this.root, value)\r\n\t}\r\n\r\n\t//Insert helper function\r\n\tinsertNode(parent, node, value) {\r\n\t\tif (node.isNull) {\r\n\t\t\tlet newNode = new Node(value)\r\n\t\t\tif (parent === null) {\r\n\t\t\t\tnewNode.color = black\r\n\t\t\t\tnewNode.insert()\r\n\t\t\t\treturn newNode\r\n\t\t\t} else {\r\n\t\t\t\tnewNode.parent = parent\r\n\t\t\t\treturn newNode\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( node.value === value) {\r\n\t\t\treturn node\r\n\t\t}\r\n\r\n\t\tlet isLeft\r\n\t\tif (node.value > value) {\r\n\t\t\tlet left = this.insertNode(node, node.left, value)\r\n\t\t\tif (left === node.parent) {\r\n\t\t\t\tnode.insert()\r\n\t\t\t\treturn left\r\n\t\t\t}\r\n\t\t\tnode.left = left\r\n\t\t\tisLeft = true\r\n\t\t} else {\r\n\t\t\tlet right = this.insertNode(node, node.right, value)\r\n\t\t\tif (right === node.parent) {\r\n\t\t\t\tnode.insert()\r\n\t\t\t\treturn right\r\n\t\t\t}\r\n\t\t\tnode.right = right\r\n\t\t\tisLeft = false\r\n\t\t}\r\n\r\n\t\tif (isLeft) {\r\n\t\t\tif (node.left.color === red && node.color === red) {\r\n\t\t\t\tlet sibling = this.siblingOf(node)\r\n\t\t\t\tif (sibling.color === black || sibling.isNull) {\r\n\t\t\t\t\tif (node.parent.left === node) {\r\n\t\t\t\t\t\tthis.rotateRight(node, true)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.rotateRight(node.left, false)\r\n\t\t\t\t\t\tnode = node.parent\r\n\t\t\t\t\t\tthis.rotateLeft(node, true)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode.color = black\r\n\t\t\t\t\tsibling.color = black\r\n\t\t\t\t\tif (node.parent.parent !== null) {\r\n\t\t\t\t\t\tnode.parent.color = red\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (node.right.color === red && node.color === red) {\r\n\t\t\t\tlet sibling = this.siblingOf(node)\r\n\t\t\t\tif (sibling.color === black || sibling.isNull) {\r\n\t\t\t\t\tif (node.parent.right === node) {\r\n\t\t\t\t\t\tthis.rotateLeft(node, true)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.rotateLeft(node.right, false)\r\n\t\t\t\t\t\tnode = node.parent\r\n\t\t\t\t\t\tthis.rotateRight(node, true)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode.color = black\r\n\t\t\t\t\tsibling.color = black\r\n\t\t\t\t\tif (node.parent.parent !== null) {\r\n\t\t\t\t\t\tnode.parent.color = red\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!node.left.isNull) node.left.insert()\r\n\t\tif (!node.right.isNull) node.right.insert()\r\n\r\n\t\treturn node\r\n\t}\r\n\r\n\t//Delete Node\r\n\tremove(value, node = this.root) {\r\n\t\tthis.clearHighlight()\r\n\t\tif (node.isNull) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (node.value === value) {\r\n\t\t\tif (node.left.isNull || node.right.isNull) {\r\n\t\t\t\tlet tempParent = node.parent\r\n\t\t\t\tthis.deleteOneChild(node)\r\n\t\t\t\tif (tempParent) {\r\n\t\t\t\t\tif (!tempParent.left.isNull) tempParent.left.insert()\r\n\t\t\t\t\tif (!tempParent.right.isNull) tempParent.right.insert()\r\n\t\t\t\t\ttempParent.insert()\r\n\t\t\t\t\tif (tempParent.parent) tempParent.parent.insert()\r\n\t\t\t\t} else if (!this.root.isNull) this.root.insert()\r\n\t\t\t} else {\r\n\t\t\t\tlet smallestRight = this.findMin(node.right)\r\n\t\t\t\tnode.value = smallestRight.value\r\n\t\t\t\tnode.insert()\r\n\t\t\t\tthis.remove(smallestRight.value, node.right)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (node.value > value) {\r\n\t\t\tthis.remove(value, node.left)\r\n\t\t} else {\r\n\t\t\tthis.remove(value, node.right)\r\n\t\t}\r\n\t}\r\n\r\n\t//Delete helper functions\r\n\tdeleteOneChild(node) {\r\n\t\tlet child\r\n\r\n\t\tif (node.left.isNull) {\r\n\t\t\tchild = node.right\r\n\t\t} else {\r\n\t\t\tchild = node.left\r\n\t\t}\r\n\t\tthis.replaceChild(child, node)\r\n\t\tif (node.color === black) {\r\n\t\t\tif (child.color === red) {\r\n\t\t\t\tchild.color = black\r\n\t\t\t\tchild.insert()\r\n\t\t\t} else this.deleteCase1(child)\r\n\t\t}\r\n\t}\r\n\r\n\t//All cases\r\n\tdeleteCase1(node) {\r\n\t\tif (node.parent === null) {\r\n\t\t\tthis.root = node\r\n\t\t\tif (!this.root.isNull) this.root.insert()\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.deleteCase2(node)\r\n\t}\r\n\r\n\tdeleteCase2(node) {\r\n\t\tlet sibling = this.siblingOf(node)\r\n\t\tif (sibling.color === red) {\r\n\t\t\tif (sibling.parent.left === sibling)\r\n\t\t\t\tthis.rotateRight(sibling, true)\r\n\t\t\telse this.rotateLeft(sibling, true)\r\n\t\t\tif (sibling.parent === null) this.root = sibling\r\n\t\t}\r\n\t\tthis.deleteCase3(node)\r\n\t}\r\n\r\n\tdeleteCase3(node) {\r\n\t\tlet sibling = this.siblingOf(node)\r\n\t\tif (\r\n\t\t\tnode.parent.color === black &&\r\n\t\t\tsibling.color === black &&\r\n\t\t\tsibling.left.color === black &&\r\n\t\t\tsibling.right.color === black\r\n\t\t) {\r\n\t\t\tsibling.color = red\r\n\t\t\tthis.deleteCase1(node.parent)\r\n\t\t} else {\r\n\t\t\tthis.deleteCase4(node)\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteCase4(node) {\r\n\t\tlet sibling = this.siblingOf(node)\r\n\t\tif (\r\n\t\t\tnode.parent.color === red &&\r\n\t\t\tsibling.color === black &&\r\n\t\t\tsibling.left.color === black &&\r\n\t\t\tsibling.right.color === black\r\n\t\t) {\r\n\t\t\tsibling.color = red\r\n\t\t\tnode.parent.color = black\r\n\t\t\treturn\r\n\t\t} else {\r\n\t\t\tthis.deleteCase5(node)\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteCase5(node) {\r\n\t\tlet sibling = this.siblingOf(node)\r\n\t\tif (sibling.color === black) {\r\n\t\t\tif (\r\n\t\t\t\tnode.parent.left === node &&\r\n\t\t\t\tsibling.right.color === black &&\r\n\t\t\t\tsibling.left.color === red\r\n\t\t\t) {\r\n\t\t\t\tthis.rotateRight(sibling.left, true)\r\n\t\t\t\tsibling.insert()\r\n\t\t\t} else if (\r\n\t\t\t\tnode.parent.right === node &&\r\n\t\t\t\tsibling.left.color === black &&\r\n\t\t\t\tsibling.right.color === red\r\n\t\t\t) {\r\n\t\t\t\tthis.rotateLeft(sibling.right, true)\r\n\t\t\t\tsibling.insert()\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.deleteCase6(node)\r\n\t}\r\n\r\n\tdeleteCase6(node) {\r\n\t\tlet sibling = this.siblingOf(node)\r\n\t\tsibling.color = sibling.parent.color\r\n\t\tsibling.parent.color = black\r\n\t\tif (node.parent.left === node) {\r\n\t\t\tsibling.right.color = black\r\n\t\t\tthis.rotateLeft(sibling, false)\r\n\t\t\tif (!sibling.right.isNull) sibling.right.insert()\r\n\t\t\tif (!sibling.left.isNull) sibling.left.insert()\r\n\t\t} else {\r\n\t\t\tsibling.left.color = black\r\n\t\t\tthis.rotateRight(sibling, false)\r\n\t\t\tif (!sibling.right.isNull) sibling.right.insert()\r\n\t\t\tif (!sibling.left.isNull) sibling.left.insert()\r\n\t\t}\r\n\t\tif (sibling.parent === null) {\r\n\t\t\tthis.root = sibling\r\n\t\t}\r\n\t}\r\n\r\n\treplaceChild(child, node) {\r\n\t\tchild.parent = node.parent\r\n\t\tif (node.parent === null) this.root = child\r\n\t\telse {\r\n\t\t\tif (node.parent.left === node) {\r\n\t\t\t\tnode.parent.left = child\r\n\t\t\t} else {\r\n\t\t\t\tnode.parent.right = child\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//Tree Traversal\r\n\tpreorder(list, node = this.root) {\r\n\t\tif (!node.isNull) {\r\n\t\t\tlist.push(node.value)\r\n\t\t\tthis.preorder(list, node.left)\r\n\t\t\tthis.preorder(list, node.right)\r\n\t\t}\r\n\t}\r\n\r\n\tinorder(list, node = this.root) {\r\n\t\tif (!node.isNull) {\r\n\t\t\tthis.inorder(list, node.left)\r\n\t\t\tlist.push(node.value)\r\n\t\t\tthis.inorder(list, node.right)\r\n\t\t}\r\n\t}\r\n\r\n\tpostorder(list, node = this.root) {\r\n\t\tif (!node.isNull) {\r\n\t\t\tthis.postorder(list, node.left)\r\n\t\t\tthis.postorder(list, node.right)\r\n\t\t\tlist.push(node.value)\r\n\t\t}\r\n\t}\r\n\r\n\t//Search\r\n\tsearch(value, node = this.root) {\r\n\t\tthis.clearHighlight()\r\n\r\n\t\tif (node.isNull) return false\r\n\t\telse if (node.value === value) {\r\n\t\t\tnode.addHighlight()\r\n\t\t\tthis.highlighted = node\r\n\t\t\treturn true\r\n\t\t} else if (node.value > value)\r\n\t\t\treturn this.search(value, node.left)\r\n\t\telse return this.search(value, node.right)\r\n\t}\r\n\r\n\t//Random Tree generator\r\n\tgenerateRandomBST(num) {\r\n\t\tlet upper = 0\r\n\t\tlet lower = num * 2 + 10\r\n\t\tlet elements = new Set()\r\n\r\n\t\tfor (let i = 0; i < num; i++) {\r\n\t\t\tlet value =\r\n\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\twhile (elements.has(value)) {\r\n\t\t\t\tvalue =\r\n\t\t\t\t\tMath.floor(Math.random() * (upper - lower + 1)) + lower\r\n\t\t\t}\r\n\t\t\telements.add(value)\r\n\t\t\tthis.insert(value)\r\n\t\t}\r\n\t}\r\n\r\n\t//BST Checker\r\n\t//Main Checker function\r\n\tcheckBST() {\r\n\t\tlet BSTTypeList = []\r\n\t\tif (this.isBalanced()) {\r\n\t\t\tBSTTypeList.push('Balanced')\r\n\t\t}\r\n\t\tif (this.isComplete()) {\r\n\t\t\tBSTTypeList.push('Complete')\r\n\t\t}\r\n\t\tif (this.isPerfect()) {\r\n\t\t\tBSTTypeList.push('Perfect')\r\n\t\t}\r\n\t\tif (this.isFull()) {\r\n\t\t\tBSTTypeList.push('Full')\r\n\t\t}\r\n\t\treturn BSTTypeList\r\n\t}\r\n\r\n\t//Subfunctions\r\n\t//balance\r\n\tisBalanced(node = this.root) {\r\n\t\tif (node.isNull) return true\r\n\t\tlet leftH = this.height(node.left)\r\n\t\tlet rightH = this.height(node.right)\r\n\t\tif (Math.abs(leftH - rightH) <= 1) {\r\n\t\t\treturn this.isBalanced(node.left) && this.isBalanced(node.right)\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\t//Find height\r\n\theight(node = this.root) {\r\n\t\tif (node.isNull) return -1\r\n\t\tlet ans\r\n\t\tans = this.height(node.left)\r\n\t\tans = Math.max(this.height(node.right), ans)\r\n\t\treturn ans + 1\r\n\t}\r\n\r\n\t//complete\r\n\tisComplete() {\r\n\t\tlet totalNodes = this.countNodes()\r\n\t\treturn this.isComplete2(0, totalNodes)\r\n\t}\r\n\tisComplete2(index, totalNodes, node = this.root) {\r\n\t\tif (node.isNull) return true\r\n\t\telse if (index >= totalNodes) return false\r\n\t\telse {\r\n\t\t\tlet ans = this.isComplete2(index * 2 + 1, totalNodes, node.left)\r\n\t\t\tans &= this.isComplete2(index * 2 + 2, totalNodes, node.right)\r\n\t\t\treturn ans\r\n\t\t}\r\n\t}\r\n\r\n\t//perfect EDITED\r\n\tisPerfect() {\r\n\t\tif (!this.isFull() || !this.isComplete()) return false\r\n\t\treturn this.isPerfect2()\r\n\t}\r\n\r\n\tisPerfect2(node = this.root, depth = 0) {\r\n\t\tif (node.isNull) return true\r\n\t\tdepth++\r\n\t\tif (node.right.isNull && node.left.isNull) {\r\n\t\t\tif (this.leafDepth !== -1 && this.leafDepth !== depth)\r\n\t\t\t\treturn false\r\n\t\t\tthis.leafDepth = depth\r\n\t\t}\r\n\t\treturn (\r\n\t\t\tthis.isPerfect2(node.left, depth) &&\r\n\t\t\tthis.isPerfect2(node.right, depth)\r\n\t\t)\r\n\t}\r\n\r\n\t//full\r\n\tisFull(node = this.root) {\r\n\t\tif (node.isNull) return true\r\n\t\telse if (node.left.isNull && node.right.isNull) return true\r\n\t\telse if (!node.left.isNull && !node.right.isNull) {\r\n\t\t\tlet ans\r\n\t\t\tans = this.isFull(node.left)\r\n\t\t\tans &= this.isFull(node.right)\r\n\t\t\treturn ans\r\n\t\t} else return false\r\n\t}\r\n\r\n\tcountNodes(node = this.root) {\r\n\t\tif (node.isNull) return 0\r\n\t\treturn (\r\n\t\t\tthis.countNodes(node.left) + 1 + this.countNodes(node.right)\r\n\t\t)\r\n\t}\r\n\r\n\t//Clears highlight of previously searched nodes\r\n\tclearHighlight() {\r\n\t\tif (this.highlighted) {\r\n\t\t\tthis.highlighted.clearHighlight()\r\n\t\t\tthis.highlighted = null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default RBT\r\n","import React from 'react'\r\nimport { Icon } from '@iconify/react'\r\nimport closeCircleF from '@iconify/icons-jam/close-circle-f'\r\n\r\nfunction RedBPopup(props) {\r\n\treturn (\r\n\t\t<div className=\"popup\">\r\n\t\t\t<div className=\"inner\">\r\n\t\t\t\t<h1>Help</h1>\r\n\t\t\t\t<Icon\r\n\t\t\t\t\tclassName=\"icon\"\r\n\t\t\t\t\tonClick={props.toggle}\r\n\t\t\t\t\twidth=\"35px\"\r\n\t\t\t\t\theight=\"35px\"\r\n\t\t\t\t\ticon={closeCircleF}\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul className=\"help-list\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Insert</button> Inserts a node\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Search</button> Searches and highlights the\r\n\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Delete</button> Deletes the node\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Random</button> Inserts n random nodes\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Clear</button> Removes all nodes\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Traversal</button> Performs chosen traversal\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button>Check</button>Checks whether Red Black Tree is\r\n\t\t\t\t\t\t\tBalanced, Complete, Perfect or Full\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"https://www.geeksforgeeks.org/red-black-tree-set-1-introduction-2/\"\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button className=\"link-button\">\r\n\t\t\t\t\t\t\tLearn About Red Black Trees\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RedBPopup\r\n","import React, { useState, useEffect } from 'react'\r\nimport RedBMenu from './RedBMenu'\r\nimport RBT from './DataStructure'\r\nimport RedBPopup from './RedBPopup'\r\nimport useDelError from '../../hooks/useDelError'\r\nimport { Icon } from '@iconify/react'\r\nimport questionMarkCircleOutline from '@iconify/icons-eva/question-mark-circle-outline'\r\nimport usePopup from '../../hooks/usePopup'\r\nimport useTraversal from '../../hooks/useTraversal'\r\n\r\nfunction RedBTree(props) {\r\n\t//hooks\r\n\tconst [tree, setTree] = useState()\r\n\tconst [treeHtml, setTreeHtml] = useState()\r\n\tconst [bstList, setBstList] = useState([])\r\n\tconst [delError, setDelError] = useDelError(treeHtml)\r\n\tconst [searchError, setSearchError] = useDelError(treeHtml)\r\n\tconst [traversalList, traversalDispatch] = useTraversal(tree)\r\n\tconst [popup, togglePopup] = usePopup()\r\n\r\n\t//Initializing Tree\r\n\tuseEffect(() => {\r\n\t\tlet tempTree = new RBT()\r\n\t\tsetTree(tempTree)\r\n\t\tsetTreeHtml(tempTree.root.html)\r\n\t\treturn () => {\r\n\t\t\tsetTree(null)\r\n\t\t\tsetTreeHtml(null)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBstList([])\r\n\t}, [treeHtml])\r\n\r\n\t//Insert Function\r\n\tconst insert = val => {\r\n\t\tval = parseInt(val)\r\n\t\tif (!val) return\r\n\t\tlet tempTree = tree\r\n\t\ttempTree.insert(val)\r\n\t\tsetTree(tempTree)\r\n\t\tsetTreeHtml(tree.root.html)\r\n\t\ttraversalDispatch('clear')\r\n\r\n\t}\r\n\r\n\t//Remove\r\n\tconst remove = val => {\r\n\t\tval = parseInt(val)\r\n\t\tlet tempTree = tree\r\n\t\tsetDelError(false)\r\n\t\tif (!tempTree.search(val)) {\r\n\t\t\tsetDelError(true)\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttempTree.remove(val)\r\n\t\tsetTree(tempTree)\r\n\t\tif (tree.root) setTreeHtml(tree.root.html)\r\n\t\telse setTreeHtml(null)\r\n\t\ttraversalDispatch('clear')\r\n\r\n\t}\r\n\r\n\t//Search\r\n\tconst search = val => {\r\n\t\tval = parseInt(val)\r\n\t\tlet tempTree = tree\r\n\r\n\t\tsetSearchError(false)\r\n\t\tif (!tempTree.search(val)) {\r\n\t\t\tsetSearchError(true)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\ttempTree.search(val)\r\n\t\tsetTree(tempTree)\r\n\t\tif (tree.root) setTreeHtml(tree.root.html)\r\n\t\telse setTreeHtml(null)\r\n\t}\r\n\r\n\t//Generate Random BST with num nodes\r\n\tconst random = num => {\r\n\t\tnum = parseInt(num)\r\n\t\tif (num < 0) return\r\n\t\tlet tempTree = new RBT(num)\r\n\t\tsetTree(tempTree)\r\n\t\tsetTreeHtml(tempTree.root.html)\r\n\t\ttraversalDispatch('clear')\r\n\r\n\t}\r\n\r\n\t//Checks whether BST is balanced, complete, perfect or full\r\n\tconst check = () => {\r\n\t\tlet tempList = tree.checkBST()\r\n\t\tif (!tempList.length) tempList.push('No Type Match')\r\n\t\tsetBstList(tempList)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<header>\r\n\t\t\t\t<h1 className=\"heading\">\r\n\t\t\t\t\tRed Black Tree\r\n\t\t\t\t\t<button className=\"i\" onClick={togglePopup}>\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\ticon={questionMarkCircleOutline}\r\n\t\t\t\t\t\t\twidth=\"25px\"\r\n\t\t\t\t\t\t\theight=\"25px\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</h1>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => props.selector('menu')}\r\n\t\t\t\t\tclassName=\"main-menu-button\"\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</button>\r\n\t\t\t</header>\r\n\t\t\t<RedBMenu\r\n\t\t\t\tinsert={insert}\r\n\t\t\t\tremove={remove}\r\n\t\t\t\tsearch={search}\r\n\t\t\t\trandom={random}\r\n\t\t\t\ttraversal={traversalDispatch}\r\n\t\t\t\tcheck={check}\r\n\t\t\t\tdelError={delError ? 'error' : ''}\r\n\t\t\t\tseaError={searchError ? 'error' : ''}\r\n\t\t\t/>\r\n\t\t\t<div className=\"traversal\">\r\n\t\t\t\t{traversalList.list.length ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t{traversalList.op}:\r\n\t\t\t\t\t\t{traversalList.list.map((item, index) => (\r\n\t\t\t\t\t\t\t<li key={index}>{item}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>No Traversal Performed</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"bstlist\">\r\n\t\t\t\t{bstList.length ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t{bstList.map((item, index) => (\r\n\t\t\t\t\t\t\t<li key={index}>{item}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>Not yet checked</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tree\">\r\n\t\t\t\t<ul>{treeHtml}</ul>\r\n\t\t\t</div>\r\n\t\t\t{popup ? <RedBPopup toggle={togglePopup} /> : null}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RedBTree\r\n","import React from 'react'\r\nimport { Icon } from '@iconify/react'\r\nimport closeCircleF from '@iconify/icons-jam/close-circle-f'\r\nimport questionMarkCircleOutline from '@iconify/icons-eva/question-mark-circle-outline'\r\n\r\nfunction MainPopup(props) {\r\n\treturn (\r\n\t\t<div className=\"popup main\">\r\n\t\t\t<div className=\"inner\">\r\n\t\t\t\t<h1>Welcome To Tree Visualizer!</h1>\r\n\t\t\t\t<Icon\r\n\t\t\t\t\tclassName=\"icon\"\r\n\t\t\t\t\tonClick={props.toggle}\r\n\t\t\t\t\twidth=\"35px\"\r\n\t\t\t\t\theight=\"35px\"\r\n\t\t\t\t\ticon={closeCircleF}\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tThis React application's aim is to visualize various tree\r\n\t\t\t\t\tdata structures. <br />\r\n\t\t\t\t\tFollowing data structures are visualized:\r\n\t\t\t\t\t<ul className=\"list-data\">\r\n\t\t\t\t\t\t<li>Binary Search Tree</li>\r\n\t\t\t\t\t\t<li>Trie</li>\r\n\t\t\t\t\t\t<li>AVL Trees</li>\r\n\t\t\t\t\t\t<li>Red-Black Trees</li>\r\n\t\t\t\t\t\t<li>Min Heap</li>\r\n\t\t\t\t\t\t<li>Max Heap.</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\tTo learn various visualization features of each section,\r\n\t\t\t\t\tclick on{' '}\r\n\t\t\t\t\t<Icon\r\n\t\t\t\t\t\ticon={questionMarkCircleOutline}\r\n\t\t\t\t\t\twidth=\"25px\"\r\n\t\t\t\t\t\theight=\"25px\"\r\n\t\t\t\t\t/>{' '}\r\n\t\t\t\t\tat the top.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MainPopup\r\n","import React, { useReducer, useEffect } from 'react'\nimport './styles/App.scss'\nimport './styles/BSTStyle.scss'\nimport './styles/popup.scss'\nimport './styles/mainMenuStyle.scss'\nimport Menu from './components/Menu'\nimport BSTree from './components/bst/BSTree'\nimport MinH from './components/minHeap/MinH'\nimport MaxH from './components/maxHeap/MaxH'\nimport TrieMain from './components/trie/TrieMain'\nimport AVLTree from './components/avl/AVLTree'\nimport RedBTree from './components/redBlack/RedBTree'\nimport usePopup from './hooks/usePopup'\nimport MainPopup from './components/MainPopup'\n\nconst initialState = {\n\tmenu: true,\n\tbst: false,\n\ttrie: false,\n\tminheap: false,\n\tmaxheap: false,\n\tavl: false,\n\tredb: false,\n}\n\nconst reducer = (state, action) => {\n\tswitch (action) {\n\t\tcase 'menu':\n\t\t\treturn { ...initialState, menu: true }\n\t\tcase 'bst':\n\t\t\treturn { ...initialState, bst: true, menu: false }\n\t\tcase 'trie':\n\t\t\treturn { ...initialState, trie: true, menu: false }\n\t\tcase 'minheap':\n\t\t\treturn { ...initialState, minheap: true, menu: false }\n\t\tcase 'maxheap':\n\t\t\treturn { ...initialState, maxheap: true, menu: false }\n\t\tcase 'avl':\n\t\t\treturn { ...initialState, avl: true, menu: false }\n\t\tcase 'redb':\n\t\t\treturn { ...initialState, redb: true, menu: false }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction App() {\n\tconst [state, dispatch] = useReducer(reducer, initialState)\n\tconst [popup, togglePopup] = usePopup()\n\n\tuseEffect(() => {\n\t\t\ttogglePopup()\n\t}, [])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t\n\t\t\t{state.menu && <Menu selector={dispatch} togglePopup={togglePopup}/>}\n\t\t\t{state.bst && <BSTree selector={dispatch} />}\n\t\t\t{state.trie && <TrieMain selector={dispatch} />}\n\t\t\t{state.minheap && <MinH selector={dispatch} />}\n\t\t\t{state.maxheap && <MaxH selector={dispatch} />}\n\t\t\t{state.avl && <AVLTree selector={dispatch} />}\n\t\t\t{state.redb && <RedBTree selector={dispatch} />}\n\t\t\t{popup ? <MainPopup toggle={togglePopup} /> : null}\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}